var documenterSearchIndex = {"docs":
[{"location":"tutorials/argyris_frame_modal_tut.html#Modal-analysis-of-Argyris-frame:-effect-of-prestress","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"","category":"section"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Source code: argyris_frame_modal_tut.jl","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html#Description","page":"Modal analysis of Argyris frame: effect of prestress","title":"Description","text":"","category":"section"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Vibration analysis of a L-shaped frame under a loading. The fundamental vibration frequency depends on the prestress force.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html#Goals","page":"Modal analysis of Argyris frame: effect of prestress","title":"Goals","text":"","category":"section"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Construct an L-shaped frame by merging individual members.\nCompute the geometric stiffness.\nEvaluate the effect of prestress on the fundamental frequency of vibration.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"using LinearAlgebra","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"The finite element code relies on the basic functionality implemented in this package.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"using FinEtools","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"The linear deformation code will be needed to evaluate the loading.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"using FinEtoolsDeforLinear","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"The functionality for the beam model comes from these modules.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"using FinEtoolsFlexStructures.CrossSectionModule: CrossSectionRectangle\nusing FinEtoolsFlexStructures.RotUtilModule:  update_rotation_field!\nusing FinEtoolsFlexStructures.MeshFrameMemberModule: frame_member, merge_members\nusing FinEtoolsFlexStructures.RotUtilModule: initial_Rfield\nusing FinEtoolsFlexStructures.FEMMCorotBeamModule: FEMMCorotBeam\nusing FinEtoolsFlexStructures.FEMMCorotBeamModule\nCB = FEMMCorotBeamModule","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Parameters:","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"E = 71240.0 * phun(\"MPa\")\nnu = 0.31; # Poisson ratio\nrho = 5000 * phun(\"kg/m^3\");","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"cross-sectional dimensions and length of each leg in millimeters","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"b = 0.6 * phun(\"mm\"); h = 30.0 * phun(\"mm\"); L = 240.0 * phun(\"mm\");","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Magnitude of the total applied force, Newton","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"magn = 1e-5 * phun(\"N\");","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Cross-sectional properties","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"cs = CrossSectionRectangle(s -> b, s -> h, s -> [0.0, 1.0, 0.0])\n\n#","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html#Generate-the-discrete-model","page":"Modal analysis of Argyris frame: effect of prestress","title":"Generate the discrete model","text":"","category":"section"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Select the number of elements per leg.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"n = 8;\nmembers = Tuple{FENodeSet, AbstractFESet}[]\npush!(members, frame_member([0 0 L; L 0 L], n, cs))\npush!(members, frame_member([L 0 L; L 0 0], n, cs))\nfens, fes = merge_members(members; tolerance = L / 10000)","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Construct the requisite fields, geometry and displacement Initialize configuration variables","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"geom0 = NodalField(fens.xyz)\nu0 = NodalField(zeros(size(fens.xyz,1), 3))\nRfield0 = initial_Rfield(fens)\ndchi = NodalField(zeros(size(fens.xyz,1), 6))","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Apply EBC's: one point is clamped.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"l1 = selectnode(fens; box = [0 0 0 0 L L], tolerance = L / 10000)\nfor i in [1, 2, 3, 4, 5, 6]\n    setebc!(dchi, l1, true, i)\nend\napplyebc!(dchi)\nnumberdofs!(dchi);","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Material properties","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"material = MatDeforElastIso(DeforModelRed3D, rho, E, nu, 0.0)","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Assemble the global discrete system. The stiffness and mass matrices are computed and assembled.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"femm = FEMMCorotBeam(IntegDomain(fes, GaussRule(1, 2)), material)\nK = CB.stiffness(femm, geom0, u0, Rfield0, dchi);\nM = CB.mass(femm, geom0, u0, Rfield0, dchi);","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Construct force intensity,  loaded boundary, and assemble the load.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"tipn = selectnode(fens; box=[L L 0 0  0 0], tolerance=L/n/1000)[1]\nloadbdry = FESetP1(reshape([tipn], 1, 1))\nlfemm = FEMMBase(IntegDomain(loadbdry, PointRule()))\nfi = ForceIntensity(FFlt[-magn, 0, 0, 0, 0, 0]);\nF = CB.distribloads(lfemm, geom0, dchi, fi, 3);","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Solve for the displacement under the static load.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"scattersysvec!(dchi, K\\F);","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Update deflections and rotations so that the initial stress can be computed. First the displacements:","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"u1 = deepcopy(u0)\nu1.values .= dchi.values[:, 1:3]","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Then the rotations:","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Rfield1 = deepcopy(Rfield0)\nupdate_rotation_field!(Rfield1, dchi)","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"The static deflection is now used to compute the internal forces which in turn lead to the geometric stiffness.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Kg = CB.geostiffness(femm, geom0, u1, Rfield1, dchi);\n\n#","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html#Solution-of-the-eigenvalue-free-vibration-problem","page":"Modal analysis of Argyris frame: effect of prestress","title":"Solution of the eigenvalue free-vibration problem","text":"","category":"section"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"using Arpack","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"We will solve for this many natural frequencies. Then, since they are ordered by magnitude, we will pick the fundamental by taking the first from the list.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"neigvs = 4","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"First we will  sweep through the loading factors that are positive, meaning the force points in the direction in which it was defined (towards the clamped end of the frame).","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"lfp = linearspace(0.0, 68000.0, 400)\nfsp = let\n    fsp = Float64[]\n    for load_factor in lfp\n        evals, evecs, nconv = eigs(Symmetric(K + load_factor .* Kg), Symmetric(M); nev = neigvs, which = :SM, explicittransform = :none)\n\n        e = real(evals[1])\n        f = e > 0.0 ? sqrt(e) / (2 * pi) : 0.0\n        push!(fsp, f)\n    end\n    fsp\nend","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Next, we will sweep through a range of negative load factors: this simply turns the force around so that it points away from the clamped end. This can also buckle the frame, but the magnitude is higher.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"lfm = linearspace(-109000.0, 0.0, 400)\nfsm = let\n    fsm = Float64[]\n    for load_factor in lfm\n        evals, evecs, nconv = eigs(Symmetric(K + load_factor .* Kg), Symmetric(M); nev = neigvs, which = :SM, explicittransform = :none)\n        e = real(evals[1])\n        f = e > 0.0 ? sqrt(e) / (2 * pi) : 0.0\n        push!(fsm, f)\n    end\n    fsm\nend\n\n#","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html#Plot-of-the-fundamental-frequency-is-it-depends-on-the-loading-factor","page":"Modal analysis of Argyris frame: effect of prestress","title":"Plot of the fundamental frequency is it depends on the loading factor","text":"","category":"section"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"using Gnuplot","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"We concatenate the ranges for the load factors and the calculated fundamental frequencies and present them in a single plot.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Gnuplot.gpexec(\"reset session\")\n@gp  \"set terminal windows 0 \"  :-\n\n@gp  :- cat(collect(lfp), collect(lfm); dims=1) cat(fsp, fsm; dims=1) \" lw 2 lc rgb 'red' with p title 'Fundamental frequency' \"  :-\n\n@gp  :- \"set xlabel 'Loading factor P'\" :-\n@gp  :- \"set ylabel 'Frequency(P) [Hz]'\" :-\n@gp  :- \"set title 'Frame fundamental frequency'\"","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Clearly, the curve giving the dependence of the fundamental frequency on the loading factor consists of two branches. These two branches correspond to two different buckling modes: one for the positive orientation of the force and one for the negative orientation.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"#","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html#Visualize-some-fundamental-mode-shapes","page":"Modal analysis of Argyris frame: effect of prestress","title":"Visualize some fundamental mode shapes","text":"","category":"section"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Here we visualize the fundamental vibration modes for different values of the loading factor.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"using PlotlyJS","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"using VisualStructures: plot_space_box, plot_solid, render, react!, default_layout_3d, save_to_json\nscale = 0.005\n\nvis(loading_factor, evec) = let\n    tbox = plot_space_box(reshape(inflatebox!(boundingbox(fens.xyz), 0.5 * L), 2, 3))\n    tenv0 = plot_solid(fens, fes; x=geom0.values, u=0.0 .* dchi.values[:, 1:3], R=Rfield0.values, facecolor=\"rgb(125, 155, 125)\", opacity=0.3);\n    plots = cat(tbox, tenv0; dims=1)\n    layout = default_layout_3d(;width=600, height=600)\n    layout[:scene][:aspectmode] = \"data\"\n    pl = render(plots; layout=layout, title = \"Loading factor $(loading_factor)\")\n    sleep(0.5)\n    scattersysvec!(dchi, evec)\n    scale = L/3 /  max(maximum(abs.(dchi.values[:, 1])), maximum(abs.(dchi.values[:, 2])), maximum(abs.(dchi.values[:, 3])))\n    for xscale in scale .* sin.(collect(0:1:89) .* (2 * pi / 21))\n        scattersysvec!(dchi, xscale .* evec)\n        u1 = deepcopy(u0)\n        u1.values .= dchi.values[:, 1:3]\n        Rfield1 = deepcopy(Rfield0)\n        update_rotation_field!(Rfield1, dchi)\n        tenv1 = plot_solid(fens, fes; x=geom0.values, u=dchi.values[:, 1:3], R=Rfield1.values, facecolor=\"rgb(50, 55, 125)\");\n        plots = cat(tbox, tenv0, tenv1; dims=1)\n        pl.plot.layout[:title] = \"Loading factor $(loading_factor)\"\n        react!(pl, plots, pl.plot.layout)\n        sleep(0.115)\n    end\nend","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"This is the vibration mode in the lead up to the buckling mode for the positive orientation of the force.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"loading_factor = 60000\nevals, evecs, nconv = eigs(Symmetric(K + loading_factor .* Kg), Symmetric(M); nev=neigvs, which=:SM, explicittransform = :none);\nvis(loading_factor, evecs[:, 1])","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"This is the same vibration mode for the negative orientation of the force, but note that the associated fundamental frequency increased due to the effect of the force upon the stiffening of the clamped leg of the frame that is now in tension, and therefore stiffer.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"loading_factor = -50000\nevals, evecs, nconv = eigs(Symmetric(K + loading_factor .* Kg), Symmetric(M); nev=neigvs, which=:SM, explicittransform = :none);\nvis(loading_factor, evecs[:, 1])","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"Increasing the load factor in the negative orientation further, the fundamental frequency will switch: it will be a different mode shape, the one that is close to the buckling mode shape for this orientation of the force.","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"loading_factor = -100000\nevals, evecs, nconv = eigs(Symmetric(K + loading_factor .* Kg), Symmetric(M); nev=neigvs, which=:SM, explicittransform = :none);\nvis(loading_factor, evecs[:, 1])\n\nnothing","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"","category":"page"},{"location":"tutorials/argyris_frame_modal_tut.html","page":"Modal analysis of Argyris frame: effect of prestress","title":"Modal analysis of Argyris frame: effect of prestress","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorials/beam_modal_tut.html#Modal-analysis-of-simply-supported/clamped-beam","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"","category":"section"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Source code: beam_modal_tut.jl","category":"page"},{"location":"tutorials/beam_modal_tut.html#Description","page":"Modal analysis of simply supported/clamped beam","title":"Description","text":"","category":"section"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Vibration analysis of a beam simply supported in one plane, and clamped in another. The results are compared with analytical expressions.","category":"page"},{"location":"tutorials/beam_modal_tut.html#Goals","page":"Modal analysis of simply supported/clamped beam","title":"Goals","text":"","category":"section"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Introduce definition of cross-section.\nShow generation of finite element mesh of beams.\nDescribe geometry, displacement, and rotation fields.\nDescribe application of support conditions.\nCalculate the discrete model quantities and solve the free vibration problem.\nDemonstrate visualization of the free vibrations.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"#","category":"page"},{"location":"tutorials/beam_modal_tut.html#Definition-of-the-basic-inputs","page":"Modal analysis of simply supported/clamped beam","title":"Definition of the basic inputs","text":"","category":"section"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The finite element code relies on the basic functionality implemented in this package.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"using FinEtools","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The material parameters may be defined with the specification of the units. The elastic properties are:","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"E = 30002.0 * phun(\"ksi\")\nnu = 0.0;","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The mass density is expressed in customary units as","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"rho = 0.28 * phun(\"lbm/in^3\")","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Here are the cross-sectional dimensions and the length of the beam between supports.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"b = 1.8 * phun(\"in\"); h = 1.8 * phun(\"in\"); L = 100 * phun(\"in\");\n\n#","category":"page"},{"location":"tutorials/beam_modal_tut.html#Analytical-frequencies","page":"Modal analysis of simply supported/clamped beam","title":"Analytical frequencies","text":"","category":"section"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The analytical frequencies were taken from table 8-1 of Formulas for natural frequency and mode shape, Robert D. Blevins, Krieger publishing company, Malabar Florida, reprint edition 2001. Available also in FORMULAS FOR DYNAMICS, ACOUSTICS AND VIBRATION, by the same author, Wiley, 2016, Table 4.2.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The beam is aligned with the Y global Cartesian coordinate. The beam behaves as a simply supported beam in the vertical plane (global Cartesian YZ), while in the horizontal plane (global Cartesian XY) it behaves as a clamped beam.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The cross-sectional properties are:","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"A = b * h;\nI2 = b * h^3 / 12;\nI3 = b^3 * h / 12;","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Then the analytical vibration frequencies for the first two modes are:","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"@show analyt_freq = [(1 * pi)^2, (4.73004074)^2] .* (sqrt(E * I2 / rho / A) / (2 * pi * L^2));","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The purpose of the numerical model is to calculate approximation to these two analytical natural frequencies.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"neigvs = length(analyt_freq);\n\n#","category":"page"},{"location":"tutorials/beam_modal_tut.html#Cross-section","page":"Modal analysis of simply supported/clamped beam","title":"Cross-section","text":"","category":"section"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Cross-sectional properties are incorporated in the cross-section object. The three arguments supplied are functions. All are returning \"constants\", as appropriate for a uniform cross section beam. In particular the first two functions each return the dimension of the cross-section as a constant; the third function defines the orientation of the cross-section in the global Cartesian coordinates. [1.0, 0.0, 0.0] is the vector that together with the tangent to the midline curve of the beam spans the x_1x_2 plane of the local coordinates for the beam.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"using FinEtoolsFlexStructures.CrossSectionModule: CrossSectionRectangle\ncs = CrossSectionRectangle(s -> b, s -> h, s -> [1.0, 0.0, 0.0])","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"We can compare the analytical values of the cross-section properties with those stored in the cs structure:","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"@show A, I2, I3\n@show cs.parameters(0.0)","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Now we generate the mesh of the beam. The locations of its two endpoints are:","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"xyz = [[0 -L / 2 0]; [0 L / 2 0]]","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"We will generate","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"n = 4","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"beam elements along the member.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"using FinEtoolsFlexStructures.MeshFrameMemberModule: frame_member\nfens, fes = frame_member(xyz, n, cs);","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The mesh definition consists of the nodes","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"@show fens","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"and the finite elements","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"@show fes","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Note  that the cross-sectional properties are incorporated through cs.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"#","category":"page"},{"location":"tutorials/beam_modal_tut.html#Material","page":"Modal analysis of simply supported/clamped beam","title":"Material","text":"","category":"section"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Material properties can be now used to create a material: isotropic elasticity model of the FinEtoolsDeforLinear package is instantiated.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"using FinEtoolsDeforLinear\nmaterial = MatDeforElastIso(DeforModelRed3D, rho, E, nu, 0.0)\n\n#","category":"page"},{"location":"tutorials/beam_modal_tut.html#Fields","page":"Modal analysis of simply supported/clamped beam","title":"Fields","text":"","category":"section"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Now we start constructing the discrete finite element model. We begin by constructing the requisite fields, geometry and displacement. These are the so-called \"configuration variables\", all initialized to 0. This is that geometry field.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"geom0 = NodalField(fens.xyz)","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"This is the displacement field, three unknown displacements per node.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"u0 = NodalField(zeros(size(fens.xyz, 1), 3))","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"This is the rotation field, three unknown rotations per node are represented with a rotation matrix, in total nine numbers. The utility function initial_Rfield","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"using FinEtoolsFlexStructures.RotUtilModule: initial_Rfield\nRfield0 = initial_Rfield(fens)","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Here we verify the number of nodes and the number of degrees of freedom in the rotation field per node.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"@show nents(Rfield0)\n@show ndofs(Rfield0)","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Finally, this is the displacement and rotation field for incremental changes, incremental displacements and incremental rotations. In total, 6 unknowns per node.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"dchi = NodalField(zeros(size(fens.xyz, 1), 6))\n\n#","category":"page"},{"location":"tutorials/beam_modal_tut.html#Support-conditions","page":"Modal analysis of simply supported/clamped beam","title":"Support conditions","text":"","category":"section"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Now we apply the essential boundary conditions (EBCs) to enforce the action of the supports at the ends of the beam.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"First we select the node at the location  [0 -L/2 0]. We do that by searching for all nodes that are located inside a tiny box centered at this location. The tolerance of a fraction of the length of an element (i. e. the distance between the nodes) is used to take the location and blow it up into a nonzero-volume box.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"l1 = selectnode(fens; box=[0 0 -L / 2 -L / 2 0 0], tolerance=L / n / 1000)","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The nodes in this list should consist of a single node (which is why the tolerance is so small, in order to limit the selection to a single node near the location given).","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"@show length(l1)","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The boundary condition at this point dictates zero displacements (degrees of freedom 1, 2, and 3) and zero rotations about Y (5) and Z (6). This leaves rotation about the X free.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"for i in [1,2,3,5,6]\n    setebc!(dchi, l1, true, i)\nend","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Similarly, the node next to the other end of the beam is selected.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"l1 = selectnode(fens; box=[0 0 L / 2  L / 2 0 0], tolerance=L / n / 1000)","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"And an identical boundary condition combination is enforced.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"for i in [1,2,3,5,6]\n    setebc!(dchi, l1, true, i)\nend","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"These boundary conditions now need to be \"applied\". This simply means that the prescribed values of the degrees of freedom are copied into the active degrees of freedom.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"applyebc!(dchi)","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The essential boundary conditions will also reduce the number of free (unknown) degrees of freedom.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"numberdofs!(dchi);","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Here we inspect the degrees of freedom in the incremental displacement/rotation field:","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"@show dchi.dofnums","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Note that the degrees of freedom are actually carried by the incremental field, not by the displacement or the rotation fields. There are therefore 6 degrees of freedom per node in the incremental displacement field.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"#","category":"page"},{"location":"tutorials/beam_modal_tut.html#Assemble-the-global-discrete-system","page":"Modal analysis of simply supported/clamped beam","title":"Assemble the global discrete system","text":"","category":"section"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"using FinEtoolsFlexStructures.FEMMCorotBeamModule: FEMMCorotBeam\nfemm = FEMMCorotBeam(IntegDomain(fes, GaussRule(1, 2)), material);","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"For disambiguation we will refer to the stiffness and mass functions by qualifying them with the corotational-beam module, FEMMCorotBeamModule.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"using FinEtoolsFlexStructures.FEMMCorotBeamModule\nCB = FEMMCorotBeamModule","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Thus we can construct the stiffness and mass matrix as follows: Note that the finite element machine is the first argument. This provides access to the integration domain. The next argument is the geometry field, followed by the displacement, rotations, and incremental displacement/rotation fields.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"K = CB.stiffness(femm, geom0, u0, Rfield0, dchi);\nM = CB.mass(femm, geom0, u0, Rfield0, dchi);","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"We can compare the size of the stiffness matrix with the number of degrees of freedom that are unknown (20).","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"@show size(K)\n\n#","category":"page"},{"location":"tutorials/beam_modal_tut.html#Solve-the-free-vibration-problem","page":"Modal analysis of simply supported/clamped beam","title":"Solve the free-vibration problem","text":"","category":"section"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The Arnoldi algorithm implemented in the well-known Arpack package is used to solve the generalized eigenvalue problem with the sparse matrices. As is common in structural dynamics, we request the smallest eigenvalues in absolute value (:SM).","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"using Arpack\nevals, evecs, nconv = eigs(Symmetric(K), Symmetric(M); nev=neigvs, which=:SM, explicittransform = :none);","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"First  we should check that the requested eigenvalues actually converged:","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"@show nconv == neigvs","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The eigenvalues (i. e. the squares of the angular frequencies) are returned in the vector evals. The mode shapes constitute the columns of the matrix evecs.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"@show size(evecs)","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The natural frequencies are obtained from the squares of the angular frequencies. We note the use of sqrt. which broadcast the square root over the array evals.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"fs = sqrt.(evals) / (2 * pi);\n\n#","category":"page"},{"location":"tutorials/beam_modal_tut.html#Comparison-of-computed-and-analytical-results","page":"Modal analysis of simply supported/clamped beam","title":"Comparison of computed and analytical results","text":"","category":"section"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The approximate and analytical frequencies are now reported.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"println(\"Approximate frequencies: $fs [Hz]\")\nprintln(\"Analytical frequencies: $analyt_freq [Hz]\")","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Close agreement between the approximate and analytical frequencies can be observed: The error of the numerical solution is a fraction of a percent.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"errs = abs.(analyt_freq .- fs) ./ analyt_freq\nprintln(\"Relative errors of frequencies: $errs [ND]\")\n\n#","category":"page"},{"location":"tutorials/beam_modal_tut.html#Visualize-vibration-modes","page":"Modal analysis of simply supported/clamped beam","title":"Visualize vibration modes","text":"","category":"section"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The animation will show one of the vibration modes overlaid on the undeformed geometry. The configuration during the animation needs to reflect rotations. The function update_rotation_field! will update the rotation field given a vibration mode.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"using FinEtoolsFlexStructures.RotUtilModule: update_rotation_field!","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The visualization utilities take advantage of the PlotlyJS library.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"using VisualStructures: plot_space_box, plot_solid, render, react!, default_layout_3d, save_to_json","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The magnitude of the vibration modes (displacements  and rotations) will be amplified with this scale factor:","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"scale = 1.2","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"This is the mode that will be animated:","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"mode = 1","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"In order to handle variables inside loops correctly, we create a local scope with the let end block.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"let","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"The extents of the box will be preserved during animation in order to eliminate changes in the viewing parameters.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"    tbox = plot_space_box([[-0.2 * L -L / 2 -0.2 * L]; [+0.2 * L L / 2 +0.2 * L]])","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"This is the geometry of the structure without deformation (undeformed). It is displayed as gray, partially transparent.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"    tenv0 = plot_solid(fens, fes; x=geom0.values, u=0.0 .* dchi.values[:, 1:3], R=Rfield0.values, facecolor=\"rgb(125, 155, 125)\", opacity=0.3);","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Initially the plot consists of the box and the undeformed geometry.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"    plots = cat(tbox, tenv0; dims=1)","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Create the layout for the plot. Set the size of the window.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"    layout = default_layout_3d(;width=600, height=600, options = Dict(:responsive=>true))","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Set the aspect mode to get the correct proportions.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"    layout[:scene][:aspectmode] = \"data\"","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Render the undeformed structure","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"    pl = render(plots; layout=layout, title=\"Mode $(mode)\")\n    sleep(2.115)","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"This is the animation loop.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Distribute a fraction of the selected eigenvector into the incremental","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"displacement/rotation field.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Create the deformed configuration by defining displacement field u1","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"and rotation field Rfield1.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Create the plot for the deformed configuration, and add it to the list","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"of plots.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Call the react! function to update the display. Sleep for a brief","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"period of time to give the display a chance to become current.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"    for xscale in scale .* sin.(collect(0:1:89) .* (2 * pi / 21))\n        scattersysvec!(dchi, xscale .* evecs[:, mode])\n        u1 = deepcopy(u0)\n        u1.values .= dchi.values[:, 1:3]\n        Rfield1 = deepcopy(Rfield0)\n        update_rotation_field!(Rfield1, dchi)\n        tenv1 = plot_solid(fens, fes; x=geom0.values, u=dchi.values[:, 1:3], R=Rfield1.values, facecolor=\"rgb(50, 55, 125)\");\n        plots = cat(tbox, tenv0, tenv1; dims=1)\n        react!(pl, plots, pl.plot.layout)\n        sleep(0.115)\n    end","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Save the plot to a Json file. It can be then re-displayed later.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"    save_to_json(pl, \"deformed_plot.json\")\nend","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"Load the plot from a file.","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"using VisualStructures: plot_from_json\nplot_from_json(\"deformed_plot.json\")","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"","category":"page"},{"location":"tutorials/beam_modal_tut.html","page":"Modal analysis of simply supported/clamped beam","title":"Modal analysis of simply supported/clamped beam","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html#GARTEUR-SM-AG19-Testbed:-Construction-of-the-geometry","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"","category":"section"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Source code: garteur_geometry_tut.jl","category":"page"},{"location":"tutorials/garteur_geometry_tut.html#Description","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"Description","text":"","category":"section"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"This virtual test application is based on the test article used by the GARTEUR Structures & Materials Action Group 19 which organized a Round Robin exercise where 12 European laboratories tested a single structure between 1995 and 1997. The benchmark structure was a laboratory structure built to simulate the dynamic behaviour of an aeroplane. The structure was initially built for a benchmark study on experimental modal analysis conducted by the Structures and Materials Action Group (SM-AG19) of the Group for Aeronautical Research and Technology in EURope (GARTEUR). The test-bed was designed and manufactured by ONERA, France.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"(Image: )","category":"page"},{"location":"tutorials/garteur_geometry_tut.html#References","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"References","text":"","category":"section"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"[GARTEUR] Ground Vibration Test Techniques, compiled by A Gravelle, GARTEUR Structures & Materials Action Group 19 Technical report TP-115, 1999.\n[BW] Etienne Balmes, Jan R. Wright, GARTEUR GROUP ON GROUND VIBRATION TESTING | RESULTS FROM THE TEST OF A SINGLE STRUCTURE BY 12 LABORATORIES IN EUROPE, Proceedings of DETC'97, 1997 ASME Design Engineering Technical Conferences, September 14-17, 1997, Sacramento, California.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html#Goals","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"Goals","text":"","category":"section"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Show how to construct model from multiple connected beams.\nDemonstrate the use of massless connectors.\nVisualize the structure interactively.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"#","category":"page"},{"location":"tutorials/garteur_geometry_tut.html#Geometry-of-the-testbed-airplane.","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"Geometry of the testbed airplane.","text":"","category":"section"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"The aluminum testbed was a rather simple structure which was reasonably dynamically representative of a simple airplane structure GARTEUR. It was composed of several beams simulating a fuselage with wings and a tail. Wing tip drums allowed to adjust bending and torsion frequencies similarly to airplane ones, with some very close modal frequencies.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"(Image: )","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"The structural-element finite element code relies on the basic functionality implemented in this general FEM package.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"using FinEtools","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"This is the characteristic length. The dimensions of the aircraft frame are expressed in terms of multiples of this characteristic unit.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"L = 0.1*phun(\"m\");\n\n#","category":"page"},{"location":"tutorials/garteur_geometry_tut.html#Cross-section","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"Cross-section","text":"","category":"section"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Cross-sectional properties are incorporated in the cross-section property. There are several rectangular cross-sections in the model: the fuselage, the wing, the tail. There are also three massless connectors: connections between the fuselage and the wing, between the wing structure and the viscoelastic damping layer, and between the fuselage and the tail.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"using FinEtoolsFlexStructures.CrossSectionModule: CrossSectionRectangle","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Body of the frame (fuselage).","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"cs_body = CrossSectionRectangle(s -> 1.5*L, s -> L/2, s -> [1.0, 0.0, 1.0]; label = 1)","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Wing beam.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"cs_wing = CrossSectionRectangle(s -> L/10, s -> L, s -> [0.0, 0.0, 1.0]; label = 2)","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Wing drums.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"cs_drum = CrossSectionRectangle(s -> L/10, s -> L, s -> [0.0, 0.0, 1.0]; label = 3)","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Vertical part of the tail.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"cs_tailv = CrossSectionRectangle(s -> L, s -> L/10, s -> [1.0, 0.0, 1.0]; label = 4)","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Horizontal part of the tail.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"cs_tailh = CrossSectionRectangle(s -> L/10, s -> L, s -> [0.0, 0.0, 1.0]; label = 5)","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Constraining plate on top of the viscoelastic tape.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"cs_constrp = CrossSectionRectangle(s -> L*(1.1/100), s -> L*(76.2/100), s -> [0.0, 0.0, 1.0]; label = 6)","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Massless connectors of the structural parts of the wing: the main beam and the constraining plate.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"cs_connw2c = CrossSectionRectangle(s -> L/2, s -> L/2, s -> [1.0, 0.0, 1.0]; label = 7)","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Massless connectors of the wing and the drums.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"cs_connw2d = CrossSectionRectangle(s -> L/2, s -> L/2, s -> [1.0, 0.0, 1.0]; label = 8)","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Massless connector between the body and the wings.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"cs_connb2w = CrossSectionRectangle(s -> L/5, s -> L, s -> [0.0, 1.0, 0.0]; label = 9)","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Massless connector between the body and the tail.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"cs_conntb2t = CrossSectionRectangle(s -> L, s -> L/3, s -> [1.0, 0.0, 1.0]; label = 10)","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Massless connector between the structure and the sensors and point masses.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"cs_connta2p = CrossSectionRectangle(s -> L/5, s -> L/5, s -> [1.0, 0.0, 1.0]; label = 11)\n\n#","category":"page"},{"location":"tutorials/garteur_geometry_tut.html#Mesh","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"Mesh","text":"","category":"section"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"We shall use this utility function to generate the mesh of the individual parts. This will result in a number of separate meshes for the members. These separate meshes will then be glued together (merged) based on the tolerance on the location of the nodes.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"using FinEtoolsFlexStructures.MeshFrameMemberModule: frame_member\ntolerance = L/10000;","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Number of intervals from 0.25L to 8.5L (the extent of the constraining plate).","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"nc = 8\nmeshes = Tuple{FENodeSet, AbstractFESet}[]","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Define the constituent parts of the body of the aircraft.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"push!(meshes, frame_member([-9*L 0 0; -8.5*L 0 0], 1, cs_body; label = cs_body.label))\npush!(meshes, frame_member([-8.5*L 0 0; -8.0*L 0 0], 1, cs_body; label = cs_body.label))\npush!(meshes, frame_member([-8.0*L 0 0; -2.0*L 0 0], 2, cs_body; label = cs_body.label))\npush!(meshes, frame_member([-2.0*L 0 0; 0 0 0], 1, cs_body; label = cs_body.label))\npush!(meshes, frame_member([0 0 0; 6*L 0 0], 2, cs_body; label = cs_body.label))","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Define the aluminum parts of the wings.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"push!(meshes, frame_member([0 0 0.805*L;  0 0.25*L 0.805*L], 1, cs_wing; label = cs_wing.label))\npush!(meshes, frame_member([0 0 0.805*L;  0 -0.25*L 0.805*L], 1, cs_wing; label = cs_wing.label))\npush!(meshes, frame_member([0 0.25*L 0.805*L;  0 8.5*L 0.805*L], nc, cs_wing; label = cs_wing.label))\npush!(meshes, frame_member([0 -0.25*L 0.805*L;  0 -8.5*L 0.805*L], nc, cs_wing; label = cs_wing.label))\npush!(meshes, frame_member([0 8.5*L 0.805*L;  0 9.5*L 0.805*L], 1, cs_wing; label = cs_wing.label))\npush!(meshes, frame_member([0 -8.5*L 0.805*L;  0 -9.5*L 0.805*L], 1, cs_wing; label = cs_wing.label))\npush!(meshes, frame_member([0 9.5*L 0.805*L;  0 10.0*L 0.805*L], 1, cs_wing; label = cs_wing.label))\npush!(meshes, frame_member([0 -9.5*L 0.805*L;  0 -10.0*L 0.805*L], 1, cs_wing; label = cs_wing.label))","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Define the drums at the ends of the wings.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"push!(meshes, frame_member([0 +9.5*L +0.91*L; +2*L +9.5*L +0.91*L], 1, cs_drum; label = cs_drum.label))\npush!(meshes, frame_member([0 +9.5*L +0.91*L; -2*L +9.5*L +0.91*L], 1, cs_drum; label = cs_drum.label))\npush!(meshes, frame_member([0 -9.5*L +0.91*L; +2*L -9.5*L +0.91*L], 1, cs_drum; label = cs_drum.label))\npush!(meshes, frame_member([0 -9.5*L +0.91*L; -2*L -9.5*L +0.91*L], 1, cs_drum; label = cs_drum.label))","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Define the horizontal and vertical parts of the tail.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"push!(meshes, frame_member([-8*L 0 .75*L; -8*L 0 3.35*L], 2, cs_tailv; label = cs_tailv.label))\npush!(meshes, frame_member([-8*L 0 3.35*L; -8*L 0 3.75*L], 2, cs_tailv; label = cs_tailv.label))\npush!(meshes, frame_member([-8*L 0 3.8*L; -8*L 2*L 3.8*L], 2, cs_tailh; label = cs_tailh.label))\npush!(meshes, frame_member([-8*L 0 3.8*L; -8*L -2*L 3.8*L], 2, cs_tailh; label = cs_tailh.label))","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Define the parts of the aluminum constraining plate for the viscoelastic layer.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"push!(meshes, frame_member([-.119*L 0 0.8665*L;  -.119*L 0.25*L 0.8665*L], 1, cs_constrp; label = cs_constrp.label))\npush!(meshes, frame_member([-.119*L 0 0.8665*L;  -.119*L -0.25*L 0.8665*L], 1, cs_constrp; label = cs_constrp.label))\npush!(meshes, frame_member([-.119*L 0.25*L 0.8665*L;  -.119*L 8.5*L 0.8665*L], nc, cs_constrp; label = cs_constrp.label))\npush!(meshes, frame_member([-.119*L -0.25*L 0.8665*L;  -.119*L -8.5*L 0.8665*L], nc, cs_constrp; label = cs_constrp.label))","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Define the massless connectors between: Wing - Wingdrum","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"push!(meshes, frame_member([0 +9.5*L +0.805*L;0 +9.5*L +0.91*L], 1, cs_connw2d; label = cs_connw2d.label))\npush!(meshes, frame_member([0 -9.5*L +0.805*L;0 -9.5*L +0.91*L], 1, cs_connw2d; label = cs_connw2d.label))","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Body-Wing","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"push!(meshes, frame_member([0 0 0; 0 0.25*L .805*L], 1, cs_connb2w; label = cs_connb2w.label))\npush!(meshes, frame_member([0 0 0; 0 -0.25*L .805*L], 1, cs_connb2w; label = cs_connb2w.label))","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Body-Tail","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"push!(meshes, frame_member([-8*L 0 0; -8*L 0 .75*L], 1, cs_conntb2t; label = cs_conntb2t.label))","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Tail-Taildrum","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"push!(meshes, frame_member([-8*L 0 3.75*L; -8*L 0 3.8*L], 1, cs_connw2d; label = cs_connw2d.label))","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Wing-Constraining plate for the viscoelastic layer Middle connector created individually","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"push!(meshes, frame_member([0 0 .805*L; -.119*L 0 0.8665*L], 1, cs_connw2c; label = cs_connw2c.label))","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Connectors alongside both wings","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"for i in 1:nc+1\n    push!(meshes, frame_member([0 (0.25+(i-1)*8.25/nc)*L .805*L;  -.119*L (0.25+(i-1)*8.25/nc)*L 0.8665*L], 1, cs_connw2c; label = cs_connw2c.label))\n    push!(meshes, frame_member([0 -(0.25+(i-1)*8.25/nc)*L .805*L;  -.119*L -(0.25+(i-1)*8.25/nc)*L 0.8665*L], 1, cs_connw2c; label = cs_connw2c.label))\nend","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Massless Sensor Connectors Tail Sensors","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"push!(meshes, frame_member([-8*L 2*L 3.8*L; -(153/20)*L (37/20)*L 3.85*L], 1, cs_connta2p; label = cs_connta2p.label))# 303\npush!(meshes, frame_member([-8*L -2*L 3.8*L; -(153/20)*L -(37/20)*L 3.85*L], 1, cs_connta2p; label = cs_connta2p.label))# 301","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Wingdrum Sensors","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"push!(meshes, frame_member([0 9.5*L .91*L ; 0 9.8*L .96*L], 1, cs_connta2p; label = cs_connta2p.label))# 101\npush!(meshes, frame_member([-2*L 9.5*L .91*L ; -1.8*L 9.8*L .96*L], 1, cs_connta2p; label = cs_connta2p.label))# 112\npush!(meshes, frame_member([2*L 9.5*L .91*L ; 1.8*L 9.8*L .96*L], 1, cs_connta2p; label = cs_connta2p.label))# 111\n\npush!(meshes, frame_member([0 -9.5*L .91*L ; 0 -9.8*L .96*L], 1, cs_connta2p; label = cs_connta2p.label))# 1\npush!(meshes, frame_member([-2*L -9.5*L .91*L ; -1.8*L -9.8*L .96*L], 1, cs_connta2p; label = cs_connta2p.label))# 12\npush!(meshes, frame_member([2*L -9.5*L .91*L ; 1.8*L -9.8*L .96*L], 1, cs_connta2p; label = cs_connta2p.label))# 11","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Wingdrum complementary masses","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"push!(meshes, frame_member([2*L 9.5*L .91*L ; 1.8*L 9.2*L .96*L], 1, cs_connta2p; label = cs_connta2p.label))# added mass\npush!(meshes, frame_member([2*L -9.5*L .91*L ; 1.8*L -9.2*L .96*L], 1, cs_connta2p; label = cs_connta2p.label))# added mass\n\n#","category":"page"},{"location":"tutorials/garteur_geometry_tut.html#Merge-all-the-individual-members-into-one-coherent-structure","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"Merge all the individual members into one coherent structure","text":"","category":"section"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Merge all the meshes of individual parts. This will glue together nodes which are in the \"same\" location. The parts of the mesh can be distinguished based on the label.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"fens, fesa = mergenmeshes(meshes, tolerance)","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"The result is the set of the finite element nodes, and an array of the finite element sets. The sets of the finite elements can be distinguished based on the label.","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"The number of nodes in the mesh:","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"@show count(fens)","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"The number of the finite element sets:","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"@show length(fesa)","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"The labels of the finite element sets","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"@show [s.label[1] for s in fesa]'","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"End of the tutorial","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"nothing","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"","category":"page"},{"location":"tutorials/garteur_geometry_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorials/garteur_modal_tut.html#GARTEUR-SM-AG19-Testbed:-Modal-analysis","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html#Description","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"Description","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"This virtual test application is based on the test article used by the GARTEUR Structures & Materials Action Group 19 which organized a Round Robin exercise where 12 European laboratories tested a single structure between 1995 and 1997. The benchmark structure was a laboratory structure built to simulate the dynamic behaviour of an aeroplane. The structure was initially built for a benchmark study on experimental modal analysis conducted by the Structures and Materials Action Group (SM-AG19) of the Group for Aeronautical Research and Technology in EURope (GARTEUR). The test-bed was designed and manufactured by ONERA, France.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"(Image: )","category":"page"},{"location":"tutorials/garteur_modal_tut.html#References","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"References","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"[GARTEUR] Ground Vibration Test Techniques, compiled by A Gravelle, GARTEUR Structures & Materials Action Group 19 Technical report TP-115, 1999.\n[BW] Etienne Balmes, Jan R. Wright, GARTEUR GROUP ON GROUND VIBRATION TESTING | RESULTS FROM THE TEST OF A SINGLE STRUCTURE BY 12 LABORATORIES IN EUROPE, Proceedings of DETC'97, 1997 ASME Design Engineering Technical Conferences, September 14-17, 1997, Sacramento, California.\n[3M] 3M(TM) Viscoelastic Damping Polymer 112 Series,  Technical Data, May 2017.","category":"page"},{"location":"tutorials/garteur_modal_tut.html#Goals","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"Goals","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"Show how to construct model from multiple connected beams.\nDemonstrate the use of massless connectors.\nDemonstrate the use of point masses.\nDemonstrate the use of grounded springs.\nIllustrate verification of the solution of the free vibration problem.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"#","category":"page"},{"location":"tutorials/garteur_modal_tut.html#Geometry-of-the-testbed-airplane.","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"Geometry of the testbed airplane.","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The aluminum testbed was a rather simple structure which was reasonably dynamically representative of a simple airplane structure GARTEUR. It was composed of several beams simulating a fuselage with wings and a tail. Wing tip drums allowed to adjust bending and torsion frequencies similarly to airplane ones, with some very close modal frequencies.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"(Image: )","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The script included below defines the geometry of the structure, the cross-sectional properties, the connectivity, and the location of the nodes.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"include(\"garteur_geometry_tut.jl\")","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The geometry is visualized in the tutorial garteur_geometry_vis_tut.md.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"#","category":"page"},{"location":"tutorials/garteur_modal_tut.html#Material","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"Material","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"Material properties can be now used to create a material: isotropic elasticity model of the FinEtoolsDeforLinear package is instantiated.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"using FinEtoolsDeforLinear","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The material of the structure is aluminum. The elastic modulus:","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"E = 70000.0 * phun(\"MPa\")\nnu = 0.31;","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The mass density:","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"rho = 2700 * phun(\"kg/m^3\")\nalu = MatDeforElastIso(DeforModelRed3D, rho, E, nu, 0.0)","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The material of the constraining layer on top of the viscoelastic tape. It was aluminum.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"layer = MatDeforElastIso(DeforModelRed3D, rho, alu.E, alu.nu, 0.0)","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"Material for the massless connectors has the mass density set to zero; otherwise it has the same properties as the aluminum material  of the structure.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"massless = MatDeforElastIso(DeforModelRed3D, 0.0, alu.E, alu.nu, 0.0)","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"This simple function returns material based on the label of the beam elements.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"getmaterial(labl) = begin\n    if labl == 6\n        return layer\n    elseif labl == 7 || labl == 8\n        return massless\n    end\n    return alu\nend","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"This is the assumed stifffness of the bungee cords (each one separately).","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"bungeecoefficient = 4000*phun(\"N/m\");\n\n\n#","category":"page"},{"location":"tutorials/garteur_modal_tut.html#Fields","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"Fields","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"Now we start constructing the discrete finite element model. We begin by constructing the requisite fields, geometry and displacement. These are the so-called \"configuration variables\", all initialized to 0. This is that geometry field.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"geom0 = NodalField(fens.xyz)","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"This is the displacement field, three unknown displacements per node.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"u0 = NodalField(zeros(size(fens.xyz, 1), 3))","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"This is the rotation field, three unknown rotations per node are represented with a rotation matrix, in total nine numbers. The utility function initial_Rfield","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"using FinEtoolsFlexStructures.RotUtilModule: initial_Rfield\nRfield0 = initial_Rfield(fens)","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"Finally, this is the displacement and rotation field for incremental changes, incremental displacements and incremental rotations. In total, 6 unknowns per node.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"dchi = NodalField(zeros(size(fens.xyz, 1), 6))","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"There are no support conditions.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"applyebc!(dchi)","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The  the number of free(unknown) degrees of freedom is equal to the total number of degrees of freedom in the system.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"numberdofs!(dchi);\n\n#","category":"page"},{"location":"tutorials/garteur_modal_tut.html#Identify-support-points-and-locations-of-sensors","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"Identify support points and locations of sensors","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"Suspension points","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"suspln = selectnode(fens; box = initbox!(Float64[], vec([0.0*L 0.0*L 0.805*L])), inflate = tolerance)\nsusprn = selectnode(fens; box = initbox!(Float64[], vec([0.0*L -0.0*L 0.805*L])), inflate = tolerance)\nsuspbn = selectnode(fens; box = initbox!(Float64[], vec([-2.0*L 0.0*L 0.0*L])), inflate = tolerance)","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The sensors at the tip of the left and right wing drum","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"sensor112n = selectnode(fens; box = initbox!(Float64[], vec([+1.8*L 9.8*L 0.96*L])), inflate = tolerance)\nsensor12n = selectnode(fens; box = initbox!(Float64[], vec([+1.8*L -9.8*L .96*L])), inflate = tolerance)\nsensor111n = selectnode(fens; box = initbox!(Float64[], vec([-1.8*L 9.8*L 0.96*L])), inflate = tolerance)\nsensor11n = selectnode(fens; box = initbox!(Float64[], vec([-1.8*L -9.8*L .96*L])), inflate = tolerance)","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The joint between the horizontal and vertical tail parts","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"sensor202n = selectnode(fens; box = initbox!(Float64[], vec([-8*L 0 3.8*L])), inflate = tolerance)\n\n#","category":"page"},{"location":"tutorials/garteur_modal_tut.html#Assemble-the-global-discrete-system","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"Assemble the global discrete system","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"For disambiguation we will refer to the stiffness and mass functions by qualifying them with the corotational-beam module, FEMMCorotBeamModule.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"using FinEtoolsFlexStructures.FEMMCorotBeamModule\nCB = FEMMCorotBeamModule","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"Note that we have an array of finite element sets. We compute the matrices for each set separately and accumulate them into the final overall matrix. Thus we can construct the stiffness and mass matrix as follows.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"using  SparseArrays\n\nK, M = let\n    K = spzeros(dchi.nfreedofs, dchi.nfreedofs)\n    M = spzeros(dchi.nfreedofs, dchi.nfreedofs)\n    for fes in fesa\n        labl  = fes.label[1]\n        femm = CB.FEMMCorotBeam(IntegDomain(fes, GaussRule(1, 2)), getmaterial(labl));\n        K += CB.stiffness(femm, geom0, u0, Rfield0, dchi);\n        M += CB.mass(femm, geom0, u0, Rfield0, dchi);\n    end\n    K, M\nend\n\n#","category":"page"},{"location":"tutorials/garteur_modal_tut.html#Additional-concentrated-masses.","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"Additional concentrated masses.","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"using LinearAlgebra\n\nusing FinEtoolsFlexStructures.FEMMPointMassModule\nPM = FEMMPointMassModule","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"There is at the sensor on the tail.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"femmcm1 =  PM.FEMMPointMass(IntegDomain(FESetP1(reshape([sensor202n;], 1, 1)), PointRule()), FFltMat(2*L*L/5*L/5*2*rho*LinearAlgebra.I(3)));","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"These are the forward/interior locations on the wing drums.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"mass1n = selectnode(fens; box = initbox!(Float64[], vec([1.8*L 9.2*L .96*L])), inflate = tolerance)\nmass2n = selectnode(fens; box = initbox!(Float64[], vec([1.8*L -9.2*L .96*L])), inflate = tolerance)\nfemmcm2 =  PM.FEMMPointMass(IntegDomain(FESetP1(reshape([mass1n; mass2n;], 2, 1)), PointRule()), FFltMat(0.2*phun(\"kg\")*LinearAlgebra.I(3)));\n\nMp = PM.mass(femmcm1, geom0, u0, Rfield0, dchi) + PM.mass(femmcm2, geom0, u0, Rfield0, dchi);\n\n#","category":"page"},{"location":"tutorials/garteur_modal_tut.html#Bungee-supports","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"Bungee supports","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"using LinearAlgebra\n\nusing FinEtoolsFlexStructures.FEMMPointGroundedSpringModule\nBS = FEMMPointGroundedSpringModule","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"There are three suspension points at the top of the fuselage. We assume that these bungee supports exert only reaction in the vertical direction.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"femmbs =  BS.FEMMPointGroundedSpring(IntegDomain(FESetP1(reshape([suspln; susprn; suspbn;], 3, 1)), PointRule()),\nFFltMat([bungeecoefficient*[0;0;1]*[0;0;1]' 0*LinearAlgebra.I(3); 0*LinearAlgebra.I(3) 0*LinearAlgebra.I(3)]));\n\nKb = BS.stiffness(femmbs, geom0, u0, Rfield0, dchi)\n\nKt = K + Kb\nMt = M + Mp","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"We can compare the size of the stiffness matrix with the number of degrees of freedom that are unknown (20).","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"@show size(Kt)\n\n#","category":"page"},{"location":"tutorials/garteur_modal_tut.html#Solve-the-free-vibration-problem","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"Solve the free-vibration problem","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"Find this many natural frequencies:","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"neigvs = 20","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"Since the structure is free-floating, mass shifting must be employed to obtain the solution with the singular stiffness matrix. We are simply guessing a frequency between zero and the first fundamental frequency.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"oshift = (2*pi*0.5)^2;","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The Arnoldi algorithm implemented in the well-known Arpack package is used to solve the generalized eigenvalue problem with the sparse matrices. As is common in structural dynamics, we request the smallest eigenvalues in absolute value (:SM).","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"using Arpack\nevals, evecs, nconv = eigs(Kt + oshift * Mt, Mt; nev=neigvs, which=:SM, explicittransform = :none);","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"First  we should check that the requested eigenvalues actually converged:","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"@show nconv == neigvs","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The eigenvalues (i. e. the squares of the angular frequencies) are returned in the vector evals. The mode shapes constitute the columns of the matrix evecs.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"@show size(evecs)","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The natural frequencies are obtained from the squares of the angular frequencies. We note the use of sqrt. which broadcast the square root over the array evals.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"fs = sqrt.([max(0, e - oshift) for e in evals]) / (2 * pi);\n\n#","category":"page"},{"location":"tutorials/garteur_modal_tut.html#Comparison-of-computed-and-analytical-results","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"Comparison of computed and analytical results","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"Set of modes measured by participant C.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"Mode Description Frequency\n1.-6. \"Rigid body\" modes 0\n7. Two node bending 6.37 Hz\n8. Global fuselage rotation 16.10 Hz\n9. First antisymmetric wing torsion 33.13 Hz\n10. First symmetric wing torsion 33.53 Hz\n11. Three node bending 35.65 Hz","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The approximate and analytical frequencies are now reported.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"sigdig(n) = round(n * 1000) / 1000\n\nprintln(\"Frequencies 7 and higher\")\nprintln(\"Approximate: $(sigdig.(fs[7:end])) [Hz]\")\nprintln(\"Participant C experimental: $([6.37, 16.10, 33.13, 33.53, 35.65, 48.38, 49.43, 55.08]) [Hz]\")\n\n#","category":"page"},{"location":"tutorials/garteur_modal_tut.html#Visualize-vibration-modes","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"Visualize vibration modes","text":"","category":"section"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The animation will show one of the vibration modes overlaid on the undeformed geometry. The configuration during the animation needs to reflect rotations. The function update_rotation_field! will update the rotation field given a vibration mode.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"using FinEtoolsFlexStructures.RotUtilModule: update_rotation_field!","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The visualization utilities take advantage of the PlotlyJS library.","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"using PlotlyJS\nusing VisualStructures: plot_space_box, plot_solid, render, react!, default_layout_3d, save_to_json","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The magnitude of the vibration modes (displacements  and rotations) will be amplified with this scale factor:","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"scale = 0.3","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"The animation is encapsulated in a little function:","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"vis(mode) = begin\n    tbox = plot_space_box(reshape(inflatebox!(boundingbox(fens.xyz), 4*L), 2, 3))\n    tenv0 = tbox\n    for fes in fesa\n        t = plot_solid(fens, fes; x=geom0.values, u=0.0 .* dchi.values[:, 1:3], R=Rfield0.values, facecolor=\"rgb(125, 155, 125)\", opacity=0.3);\n        tenv0 = cat(tenv0, t; dims=1)\n    end\n    plots = tenv0\n    layout = default_layout_3d(;title = \"Mode $(mode), $(sigdig.(fs[mode])) [Hz]\")\n    layout[:scene][:aspectmode] = \"data\"\n    pl = render(plots; layout=layout)\n    sleep(0.115)\n    for xscale in scale .* sin.(collect(0:1:89) .* (2 * pi / 21))\n        scattersysvec!(dchi, xscale .* evecs[:, mode])\n        u1 = deepcopy(u0)\n        u1.values .= dchi.values[:, 1:3]\n        Rfield1 = deepcopy(Rfield0)\n        update_rotation_field!(Rfield1, dchi)\n        plots = tenv0\n        for fes in fesa\n            tenv1 = plot_solid(fens, fes; x=geom0.values, u=dchi.values[:, 1:3], R=Rfield1.values, facecolor=\"rgb(50, 55, 125)\");\n            plots = cat(plots, tenv1; dims=1)\n        end\n        react!(pl, plots, pl.plot.layout)\n        sleep(0.08)\n    end\nend\n\n#","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"This is the mode that will be animated:","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"vis(7)\n\nnothing","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"","category":"page"},{"location":"tutorials/garteur_modal_tut.html","page":"GARTEUR SM-AG19 Testbed: Modal analysis","title":"GARTEUR SM-AG19 Testbed: Modal analysis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html#Modal-analysis-of-a-free-floating-steel-circle","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"","category":"section"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Source code: circle_modal_conv_tut.jl","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html#Description","page":"Modal analysis of a free-floating steel circle","title":"Description","text":"","category":"section"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Vibration analysis of a free-floating steel ring. This is a benchmark from the NAFEMS Selected Benchmarks for Natural Frequency Analysis, publication: Test VM09: Circular Ring –  In-plane and Out-of-plane Vibration.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The results can be compared with analytical expressions, but the main purpose is to compute data for extrapolation to the limit to predict the true natural frequencies.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html#Reference-frequencies","page":"Modal analysis of a free-floating steel circle","title":"Reference frequencies","text":"","category":"section"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"There will be 6 rigid body modes (zero natural frequencies).","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The numerical results are due to the publication: NAFEMS Finite Element Methods & Standards, Abbassian, F., Dawswell, D. J., and Knowles, N. C. Selected Benchmarks for Natural Frequency Analysis, Test No.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Glasgow: NAFEMS, Nov., 1987.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The reference values were analytically determined (Blevins, FORMULAS FOR DYNAMICS, ACOUSTICS AND VIBRATION, Table 4.16). Note that shear flexibility was neglected when computing the reference values.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Mode Reference Value (Hz) NAFEMS Target Value (Hz)\n7, 8 (out of plane) 51.85\n9, 10 (in plane) 53.38\n11, 12 (out of plane) 148.8\n13, 14 (in plane) 151.0\n15, 16 (out of plane) 287.0\n17, 18 (in plane) 289.5","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html#Goals","page":"Modal analysis of a free-floating steel circle","title":"Goals","text":"","category":"section"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Show convergence relative to reference values.\nCompute data for extrapolation to the limit to predict the true natural frequencies.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"#","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html#Definition-of-the-basic-inputs","page":"Modal analysis of a free-floating steel circle","title":"Definition of the basic inputs","text":"","category":"section"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Include the needed packages and modules.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"using Arpack\nusing FinEtools\nusing FinEtoolsDeforLinear\nusing FinEtoolsFlexStructures.MeshFrameMemberModule: frame_member\nusing FinEtoolsFlexStructures.CrossSectionModule: CrossSectionCircle\nusing FinEtoolsFlexStructures.FEMMCorotBeamModule\nCB = FEMMCorotBeamModule\nusing FinEtoolsFlexStructures.FEMMCorotBeamModule: FEMMCorotBeam\nusing FinEtoolsFlexStructures.FESetCorotBeamModule: MASS_TYPE_CONSISTENT_NO_ROTATION_INERTIA,\n    MASS_TYPE_CONSISTENT_WITH_ROTATION_INERTIA,\n    MASS_TYPE_LUMPED_DIAGONAL_NO_ROTATION_INERTIA,\n    MASS_TYPE_LUMPED_DIAGONAL_WITH_ROTATION_INERTIA","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The material parameters may be defined with the specification of the units. The elastic properties are:","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"E = 200.0 * phun(\"GPa\")\nnu = 0.3;","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The mass density is","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"rho = 8000 * phun(\"kg/m^3\")","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Here are the cross-sectional dimensions and the length of the beam between supports.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"radius = 1.0 * phun(\"m\"); diameter = 0.1 * phun(\"m\");","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"We shall calculate these eigenvalues, but we are mostly interested in the first three  natural frequencies.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"neigvs = 18;","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The mass shift needs to be applied since the structure is free-floating.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"oshift = (2*pi*15)^2","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Here we get to choose the model: Bernoulli or Timoshenko","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"shear_correction_factor = 6/7 # Timoshenko","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"shearcorrectionfactor = Inf # Bernoulli","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"cs = CrossSectionCircle(s -> diameter/2, s -> [1.0, 0.0, 0.0], shear_correction_factor)\n@show cs.parameters(0.0)","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Here we can choose the mass- matrix type:","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"mtype = MASS_TYPE_CONSISTENT_NO_ROTATION_INERTIA\nmtype = MASS_TYPE_CONSISTENT_WITH_ROTATION_INERTIA\nmtype = MASS_TYPE_LUMPED_DIAGONAL_NO_ROTATION_INERTIA\nmtype = MASS_TYPE_LUMPED_DIAGONAL_WITH_ROTATION_INERTIA","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Here are the formulas for the first two natural frequencies, obtained analytically with the shear flexibility  neglected. The parameters of the structure:","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"R = radius\nIm = cs.parameters(0.0)[4]\nm = rho * cs.parameters(0.0)[1]","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"For instance the the first out of plane mode is listed in this table as","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"J = cs.parameters(0.0)[2]\nG = E/2/(1+nu)\ni = 2 # the first non-rigid body mode\n@show i*(i^2-1)/(2*pi*R^2)*sqrt(E*Im/m/(i^2+E*Im/G/J))","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The first \"ovaling\" (in-plane) mode is:","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"i=2 # the first ovaling mode\n@show i*(i^2-1)/(2*pi*R^2*(i^2+1)^(1/2))*sqrt(E*Im/m)\n\nmaterial = MatDeforElastIso(DeforModelRed3D, rho, E, nu, 0.0)","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"We will generate this many elements  along the length of the circular ring.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"results = let\n    results = []\n    for i in 1:3\n        n = 10*2^i","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"beam elements along the member.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"        tolerance = radius/n/1000;","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Generate the mesh of a straight member.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"        fens, fes = frame_member([0 0 0; 2*pi 0 0], n, cs)","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Twist the straight member into a ring.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"        for i in 1:count(fens)\n            a = fens.xyz[i, 1]\n            fens.xyz[i, :] .= (radius+radius*cos(a), radius*sin(a), 0)\n        end","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Merge the nodes of the bases, which involves renumbering the connectivity.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"        fens, fes = mergenodes(fens, fes, tolerance, [1, n+1])","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Generate the discrete model.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"        geom0 = NodalField(fens.xyz)\n        u0 = NodalField(zeros(size(fens.xyz, 1), 3))\n        using FinEtoolsFlexStructures.RotUtilModule: initial_Rfield\n        Rfield0 = initial_Rfield(fens)\n        dchi = NodalField(zeros(size(fens.xyz, 1), 6))\n        applyebc!(dchi)\n        numberdofs!(dchi);\n        femm = FEMMCorotBeam(IntegDomain(fes, GaussRule(1, 2)), material);\n        K = CB.stiffness(femm, geom0, u0, Rfield0, dchi);\n        M = CB.mass(femm, geom0, u0, Rfield0, dchi; mass_type = mtype);","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Solve the free vibration problem.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"        evals, evecs, nconv = eigs(K + oshift * M, M; nev=neigvs, which=:SM, ncv = 3*neigvs, maxiter = 2000, explicittransform = :none);","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Correct for the mass shift.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"        evals = evals .- oshift;\n        sigdig(n) = round(n * 10000) / 10000\n        fs = real(sqrt.(complex(evals)))/(2*pi)\n        println(\"Eigenvalues: $(sigdig.(fs)) [Hz]\")\n        push!(results, (fs[6+1], fs[6+3], fs[6+5]))\n    end\n    results # return these values from the block\nend\n\n@show results\n\n#","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html#Richardson-extrapolation","page":"Modal analysis of a free-floating steel circle","title":"Richardson extrapolation","text":"","category":"section"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Here we will use Richardson extrapolation from the three sets of data. This will allow us to predict the convergence rate and the true solution for each of the three frequencies (or rather the pairs of frequencies, 7 and 8, 9 and 10, and 11 and 12).","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"We will immediately set up the convergence plots. We will extrapolate and then compute from that the normalized error to be plotted with respect to the refinement factors (which in this case are 4, 2, and 1). We use the refinement factor as a convenience: we will calculate the element size by dividing the circumference of the ring with a number of elements generated circumferentially.","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"using FinEtools.AlgoBaseModule: richextrapol\n\nusing Gnuplot\n@gp  \"set terminal windows 1 \"  :-","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Modes 7 and 8","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"sols = [r[1] for r in results]\nresextrap = richextrapol(sols, [4.0, 2.0, 1.0])\nprint(\"Predicted frequency 7 and 8: $(resextrap[1])\\n\")\nerrs = abs.(sols .- resextrap[1])./resextrap[1]\n@gp  :- 2*pi*radius./[80, 160, 320] errs \" lw 2 lc rgb 'red' with lp title 'Mode 7, 8' \"  :-","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Modes 9 and 10","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"sols = [r[2] for r in results]\nresextrap = richextrapol(sols, [4.0, 2.0, 1.0])\nprint(\"Predicted frequency 9 and 10: $(resextrap[1])\\n\")\nerrs = abs.(sols .- resextrap[1])./resextrap[1]\n@gp  :- 2*pi*radius./[80, 160, 320] errs \" lw 2 lc rgb 'green' with lp title 'Mode 9, 10' \"  :-","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Modes 11 and 12","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"sols = [r[3] for r in results]\nresextrap = richextrapol(sols, [4.0, 2.0, 1.0])\nprint(\"Predicted frequency 11 and 12: $(resextrap[1])\\n\")\nerrs = abs.(sols .- resextrap[1])./resextrap[1]\n@gp  :- 2*pi*radius./[80, 160, 320] errs \" lw 2 lc rgb 'blue' with lp title 'Mode 11, 12' \"  :-\n\n@gp  :- \"set xrange [0.01:0.1]\" \"set logscale x\" :-\n@gp  :- \"set logscale y\" :-\n@gp  :- \"set xlabel 'Element size'\" :-\n@gp  :- \"set ylabel 'Normalized error [ND]'\" :-\n@gp  :- \"set title 'Beam: Convergence of modes 7, ..., 12'\"","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"","category":"page"},{"location":"tutorials/circle_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorials/fast_top_tut.html#Fast-Lagrangian-top.","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"","category":"section"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Source code: fast_top_tut.jl","category":"page"},{"location":"tutorials/fast_top_tut.html#Description","page":"Fast Lagrangian top.","title":"Description","text":"","category":"section"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Fast-spinning Lagrange  top simulated by a beam model. The reference solution is available in Krysl, P., Endres, L.: Explicit Newmark/Verlet algorithm for time integration of the rotational dynamics of rigid bodies. Int. J. Numer. Meth. Eng. 62, 2154–2177 (2005).","category":"page"},{"location":"tutorials/fast_top_tut.html#Goals","page":"Fast Lagrangian top.","title":"Goals","text":"","category":"section"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Illustrate integration of the nonlinear equations of motion with the Newmark algorithm.","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"using LinearAlgebra\nusing PlotlyJS\n\n#","category":"page"},{"location":"tutorials/fast_top_tut.html#Definition-of-the-basic-inputs","page":"Fast Lagrangian top.","title":"Definition of the basic inputs","text":"","category":"section"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"The finite element code realize on the basic functionality implemented in this package.","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"using FinEtools","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"The material parameters may be defined with the specification of the units. The elastic properties and the mass density are:","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"E = 71240.0 * phun(\"MPa\")\nnu = 0.31\nrho = 2.7e3 * phun(\"kg/m^3\")","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"The top is a block of square cross-section with dimensions","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Width = 60 * phun(\"mm\"); Height = 60 * phun(\"mm\");\nLength = 4*Width\n\nMass = Width*Height*Length*rho;\nIL =  (1/12)*Mass*(Width^2+Height^2);\nIb =  (1/12)*Mass*(Length^2+Height^2)+Mass*(Length/2)^2;\nIh =  (1/12)*Mass*(Width^2+Length^2)+Mass*(Length/2)^2;\nOmega0 = 313*pi;\nR0 = rotmat3([0.05 0 0]);\ng = 9.81 * phun(\"m/sec^2\");\nq = [0,0,-g*Width*Height*rho];\nutol = 1e-3 * phun(\"m\");\nmaxit = 12\ndt = min(2*pi/norm(Omega0)/10, 0.005);\ntend = 0.8 * phun(\"sec\");\nng = 1/2; nb = 1/4*(1/2+ng)^2;","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Choose the mass formulation:","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"mass_type=1;\n\n\n#","category":"page"},{"location":"tutorials/fast_top_tut.html#Cross-section","page":"Fast Lagrangian top.","title":"Cross-section","text":"","category":"section"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Cross-sectional properties are incorporated in the cross-section property. The three arguments supplied are functions. All are returning \"constants\". In particular the first two functions each return the dimension of the cross-section as a constant(the beam has a uniform cross-section); the third function defines the orientation of the cross-section in the global Cartesian coordinates. [1.0, 0.0, 0.0] is the vector that together with the tangent to the midline curve of the beam spans the x_1x_2 plane of the local coordinates for the beam.","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"using FinEtoolsFlexStructures.CrossSectionModule: CrossSectionRectangle\ncs = CrossSectionRectangle(s -> Width, s -> Width, s -> [1.0, 0.0, 0.0])","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Select the number of elements per leg.","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"spin_vector = R0*[0, 0, Omega0];\nX=[0 0 0;    reshape(R0*[0,0,Length], 1, 3)];\nn=2;\ntolerance=Length/n/100;\n\nusing FinEtoolsFlexStructures.MeshFrameMemberModule: frame_member\nmembers = []\npush!(members, frame_member(X, n, cs))\n\nusing FinEtoolsFlexStructures.MeshFrameMemberModule: merge_members\nfens, fes = merge_members(members; tolerance = tolerance);","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Material properties","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"using FinEtoolsDeforLinear\nmaterial = MatDeforElastIso(DeforModelRed3D, rho, E, nu, 0.0)\n\n\n\n#","category":"page"},{"location":"tutorials/fast_top_tut.html#Fields","page":"Fast Lagrangian top.","title":"Fields","text":"","category":"section"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Now we start constructing the discrete finite element model. We begin by constructing the requisite fields, geometry and displacement. These are the so-called \"configuration variables\", all initialized to 0. This is that geometry field.","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"geom0 = NodalField(fens.xyz)","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"This is the displacement field, three unknown displacements per node.","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"u0 = NodalField(zeros(size(fens.xyz, 1), 3))","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"This is the rotation field, three unknown rotations per node are represented with a rotation matrix, in total nine numbers. The utility function initial_Rfield","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"using FinEtoolsFlexStructures.RotUtilModule: initial_Rfield\nRfield0 = initial_Rfield(fens)","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Finally, this is the displacement and rotation field for incremental changes, incremental displacements and incremental rotations. In total, 6 unknowns per node.","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"dchi = NodalField(zeros(size(fens.xyz,1), 6))\n\n#","category":"page"},{"location":"tutorials/fast_top_tut.html#Support-conditions","page":"Fast Lagrangian top.","title":"Support conditions","text":"","category":"section"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"The \"bottom\" of the top is pinned.","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"box = fill(0.0, 6)\ninitbox!(box, X[1,:])\nsupportn = selectnode(fens; box = box, inflate = tolerance)\ninitbox!(box, X[2,:])\ntipn = selectnode(fens; box = box, inflate = tolerance)\nfor i in [1, 2, 3]\n    setebc!(dchi, supportn, true, i)\nend\napplyebc!(dchi)\nnumberdofs!(dchi);","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Initial conditions","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"v0 = deepcopy(dchi) # need the numbering of the degrees of freedom\nfor i in 1:size(v0.values, 1)\n    v0.values[i, 4:6] = spin_vector\nend","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"For disambiguation we will refer to the stiffness and mass functions by qualifying them with the corotational-beam module, FEMMCorotBeamModule.","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"using FinEtoolsFlexStructures.FEMMCorotBeamModule\nCB = FEMMCorotBeamModule\nfemm = CB.FEMMCorotBeam(IntegDomain(fes, GaussRule(1, 2)), material)\nfi = ForceIntensity(q);\n\n\nusing FinEtoolsFlexStructures.RotUtilModule: initial_Rfield, update_rotation_field!\nusing DelimitedFiles\n\nfunction integrate(tend, CB, geom0, u0, Rfield0, dchi, v0, report)","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Make sure we don't clobber any of these variable fields","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"    geom0, u0, Rfield0, dchi, v0 = deepcopy((geom0, u0, Rfield0, dchi, v0))","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Additional fields","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"    stepdchi = deepcopy(dchi)\n    u1 = deepcopy(u0)\n    v1 = deepcopy(dchi)\n    a1 = deepcopy(dchi) # zero out the Acceleration\n    a0 = deepcopy(dchi) # zero out the Acceleration\n    Rfield1 = deepcopy(Rfield0)\n    v0v = gathersysvec(v0)\n    a0v = gathersysvec(a0)\n    vpv = gathersysvec(v0);\n    dchipv = gathersysvec(dchi);\n    stepdchiv = gathersysvec(dchi);\n    rhs = gathersysvec(dchi);\n    TMPv = deepcopy(rhs)\n    utol = 1e-13*dchi.nfreedofs;\n\n    t = 0.0;\n    step = 0;\n    while (t <= tend)\n        t = t + dt;\n        (mod(step, 50)==0) && println(\"Time $(t)\"); # pause","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Initialization","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"        applyebc!(dchi) # Apply boundary conditions\n        u1.values[:] = u0.values[:]; # guess\n        Rfield1.values[:] = Rfield0.values[:]; # guess\n        stepdchi.values[:] .= 0.0;# Total increment in current step\n        a1.values[:] = -(1/nb/dt)*v0.values[:] -(1/2-nb)/nb*a0.values[:];\n        v1.values[:] = v0.values[:] + dt*((1-ng)*a0.values[:] + ng*a1.values[:]);\n        gathersysvec!(v0, v0v)\n        gathersysvec!(a0, a0v)\n        dchipv = dt*v0v + (dt^2/2*(1-2*nb))*a0v\n        vpv = v0v +(dt*(1-ng))*a0v;\n\n        iter = 1;\n        while true\n            F = CB.distribloads_global(femm, geom0, u1, Rfield1, dchi, fi)\n            Fr = CB.restoringforce(femm, geom0, u1, Rfield1, dchi);       # Internal forces\n            @. rhs = F + Fr;\n            K = CB.stiffness(femm, geom0, u1, Rfield1, dchi);\n            M = CB.mass(femm, geom0, u1, Rfield1, dchi);\n            G = CB.gyroscopic(femm, geom0, u1, Rfield1, v1, dchi);\n            gathersysvec!(stepdchi, stepdchiv)\n            @. TMPv = ((-1/(nb*dt^2))*stepdchiv+(1/(nb*dt^2))*dchipv)\n            rhs .+= M*TMPv\n            @. TMPv = ((-ng/nb/dt)*stepdchiv+(ng/nb/dt)*dchipv - vpv)\n            rhs .+= G*TMPv;\n            dchi = scattersysvec!(dchi, (K+(ng/nb/dt)*G+(1/(nb*dt^2))*M)\\rhs); # Disp. incr\n            u1.values[:] += (dchi.values[:,1:3])[:];   # increment displacement\n            stepdchi.values[:] += dchi.values[:]\n            v1.values[:] += (ng/nb/dt)*dchi.values[:];\n            a1.values[:] += (1/nb/dt^2)*dchi.values[:];\n            update_rotation_field!(Rfield1, dchi)\n            if maximum(abs.(dchi.values[:])) < utol# convergence check\n                break;\n            end\n            if (iter > maxit)# bailout for failed convergence\n                error(\"Possible failed convergence\");\n            end\n            iter += 1;\n        end\n        u0.values[:] = u1.values[:];       # update the displacement\n        Rfield0.values[:] = Rfield1.values[:]; # update the rotations\n        v0.values[:] = v1.values[:];       # update the velocities\n        a0.values[:] = a1.values[:];       # update the accelerations\n\n        report(step, u1, Rfield1)\n\n        step=step+1;\n    end\nend","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"The visualization utilities take advantage of the PlotlyJS library.","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"using PlotlyJS\nusing VisualStructures: plot_space_box, plot_midline, plot_solid, render, react!, default_layout_3d, save_to_json","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"Display the graph of the motion of the tip of the top.","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"function updategraph(step, u1, Rfield1)\n    if (mod(step,20)==0)\n        push!(tipx, X[2,1]+u1.values[tipn[1], 1])\n        push!(tipy, X[2,2]+u1.values[tipn[1], 2])\n        plots = cat(tbox, tref, scatter(;x=tipx./Length, y=tipy./Length, mode=\"markers\", name = \"Sol\", line_color = \"rgb(155, 15, 15)\"); dims = 1)\n        react!(pl, plots, pl.plot.layout)\n        sleep(0.01)\n    end\nend","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"integrate(tend, CB, geom0, u0, Rfield0, dchi, v0, updategraph)","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"tipx = Float64[]\ntipy = Float64[]\ntipz = Float64[]\nlayout = Layout(; scene=attr(\n    xaxis = attr(title=\"X\"),\n    yaxis = attr(title=\"Y\"),\n    zaxis = attr(title=\"Z\"),\n    camera = attr(\n        up=attr(x=-0.8, y=-0.6, z=0.07),\n        center=attr(x=0.0, y=0.0, z=0.0),\n        eye=attr(x=0.1, y=0.12, z=2.17),\n        projection = attr(type = \"orthographic\")\n        )), showlegend = false)\ntbox = plot_space_box([[-1.1*Width -1.1*Width 0]; [1.1*Width 1.1*Width 1.1*Length]])\ntshape0s = plot_solid(fens, fes; x = geom0.values, u = 0.0.*dchi.values[:, 1:3], R = Rfield0.values, facecolor = \"rgb(125, 155, 125)\", opacity = 0.3);\ntshape0m = plot_midline(fens, fes; x = geom0.values, u = 0.0.*dchi.values[:, 1:3], color = \"rgb(125, 105, 175)\", lwidth = 4)\nplots = cat(tbox,  tshape0s, tshape0m; dims = 1)\npl2 = render(plots; layout = layout)\nsleep(0.5)\n\nfunction updateplot(step, u1, Rfield1)\n    push!(tipx, X[2,1]+u1.values[tipn[1], 1])\n    push!(tipy, X[2,2]+u1.values[tipn[1], 2])\n    push!(tipz, X[2,3]+u1.values[tipn[1], 3])\n    if (mod(step,13)==0)\n        curv = scatter3d(;x=tipx, y=tipy, z=tipz, mode=\"lines\", name = \"Sol\", line_color = \"rgb(155, 15, 15)\")\n        tshape1s = plot_solid(fens, fes; x = geom0.values, u = u1.values, R = Rfield1.values, facecolor = \"rgb(125, 15, 15)\");\n        tshape1m = plot_midline(fens, fes; x = geom0.values, u = u1.values, color = \"rgb(125, 15, 15)\", lwidth = 4)\n        plots = cat(tbox,  tshape0s, tshape0m,  curv, tshape1s, tshape1m; dims = 1)\n        react!(pl2, plots, pl2.plot.layout)\n        sleep(0.12)\n    end\nend\n\n\nintegrate(4.5*tend, CB, geom0, u0, Rfield0, dchi, v0, updateplot)","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"","category":"page"},{"location":"tutorials/fast_top_tut.html","page":"Fast Lagrangian top.","title":"Fast Lagrangian top.","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorials/circle_modal_tut.html#Modal-analysis-of-a-free-floating-steel-circle","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Source code: circle_modal_tut.jl","category":"page"},{"location":"tutorials/circle_modal_tut.html#Description","page":"Modal analysis of a free-floating steel circle","title":"Description","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Vibration analysis of a beam simply supported in one plane, and clamped in another. The results are compared with analytical expressions. This is a benchmark from the NAFEMS Selected Benchmarks for Natural Frequency Analysis, publication: Test VM09: Circular Ring –  In-plane and Out-of-plane Vibration.","category":"page"},{"location":"tutorials/circle_modal_tut.html#Reference-frequencies","page":"Modal analysis of a free-floating steel circle","title":"Reference frequencies","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"There will be 6 rigid body modes (zero natural frequencies).","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The numerical results are due to the publication: NAFEMS Finite Element Methods & Standards, Abbassian, F., Dawswell, D. J., and Knowles, N. C. Selected Benchmarks for Natural Frequency Analysis, Test No.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Glasgow: NAFEMS, Nov., 1987.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The reference values were analytically determined (Blevins, FORMULAS FOR DYNAMICS, ACOUSTICS AND VIBRATION, Table 4.16). Note that shear flexibility was neglected when computing the reference values.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Mode Reference Value (Hz) NAFEMS Target Value (Hz)\n7, 8 (out of plane) 51.85\n9, 10 (in plane) 53.38\n11, 12 (out of plane) 148.8\n13, 14 (in plane) 151.0\n15, 16 (out of plane) 287.0\n17, 18 (in plane) 289.5","category":"page"},{"location":"tutorials/circle_modal_tut.html#Goals","page":"Modal analysis of a free-floating steel circle","title":"Goals","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Show convergence relative to reference values.\nDemonstrate the optimization of eigenvalue accuracy by choosing mass type.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"#","category":"page"},{"location":"tutorials/circle_modal_tut.html#Definition-of-the-basic-inputs","page":"Modal analysis of a free-floating steel circle","title":"Definition of the basic inputs","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The finite element code realize on the basic functionality implemented in this package.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"using FinEtools","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The material parameters may be defined with the specification of the units. The elastic properties are:","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"E = 200.0 * phun(\"GPa\")\nnu = 0.3;","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The mass density is","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"rho = 8000 * phun(\"kg/m^3\")","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Here are the cross-sectional dimensions and the length of the beam between supports.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"radius = 1.0 * phun(\"m\"); diameter = 0.1 * phun(\"m\");\n\n#","category":"page"},{"location":"tutorials/circle_modal_tut.html#Cross-section","page":"Modal analysis of a free-floating steel circle","title":"Cross-section","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Cross-sectional properties are incorporated in the cross-section property. The three arguments supplied are functions. All are returning \"constants\". In particular the first two functions each return the dimension of the cross-section as a constant(the beam has a uniform cross-section); the third function defines the orientation of the cross-section in the global Cartesian coordinates. [1.0, 0.0, 0.0] is the vector that together with the tangent to the midline curve of the beam spans the x_1x_2 plane of the local coordinates for the beam.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"using FinEtoolsFlexStructures.CrossSectionModule: CrossSectionCircle\ncs = CrossSectionCircle(s -> diameter/2, s -> [1.0, 0.0, 0.0])\n@show cs.parameters(0.0)","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"For instance the the first out of plane mode is listed in the reference cited above as","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"R = radius\nI = cs.parameters(0.0)[4]\nm = rho * cs.parameters(0.0)[1]\nJ = cs.parameters(0.0)[2]\nG = E/2/(1+nu)\ni = 2 # the first non-rigid body mode\n@show i*(i^2-1)/(2*pi*R^2)*sqrt(E*I/m/(i^2+E*I/G/J))","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The first \"ovaling\" (in-plane) mode is:","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"i = 2 # the first ovaling mode\n@show i*(i^2-1)/(2*pi*R^2*(i^2+1)^(1/2))*sqrt(E*I/m)","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The purpose of the numerical model is to calculate approximation to the reference frequencies.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"neigvs = 18;","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"We will generate","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"n = 20","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"beam elements along the member.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"using FinEtoolsFlexStructures.MeshFrameMemberModule: frame_member\ntolerance = radius/n/1000;\nfens, fes = frame_member([0 0 0; 2*pi 0 0], n, cs)\nfor i in 1:count(fens)\n    a = fens.xyz[i, 1]\n    fens.xyz[i, :] .= (radius+radius*cos(a), radius*sin(a), 0)\nend\nfens, fes = mergenodes(fens, fes, tolerance, [1, n+1])\n\n#","category":"page"},{"location":"tutorials/circle_modal_tut.html#Material","page":"Modal analysis of a free-floating steel circle","title":"Material","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Material properties can be now used to create a material: isotropic elasticity model of the FinEtoolsDeforLinear package is instantiated.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"using FinEtoolsDeforLinear\nmaterial = MatDeforElastIso(DeforModelRed3D, rho, E, nu, 0.0)\n\n#","category":"page"},{"location":"tutorials/circle_modal_tut.html#Fields","page":"Modal analysis of a free-floating steel circle","title":"Fields","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Now we start constructing the discrete finite element model. We begin by constructing the requisite fields, geometry and displacement. These are the so-called \"configuration variables\", all initialized to 0. This is that geometry field.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"geom0 = NodalField(fens.xyz)","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"This is the displacement field, three unknown displacements per node.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"u0 = NodalField(zeros(size(fens.xyz, 1), 3))","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"This is the rotation field, three unknown rotations per node are represented with a rotation matrix, in total nine numbers. The utility function initial_Rfield","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"using FinEtoolsFlexStructures.RotUtilModule: initial_Rfield\nRfield0 = initial_Rfield(fens)","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Here we verify the number of nodes and the number of degrees of freedom in the rotation field per node.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"@show nents(Rfield0)\n@show ndofs(Rfield0)","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Finally, this is the displacement and rotation field for incremental changes, incremental displacements and incremental rotations. In total, 6 unknowns per node.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"dchi = NodalField(zeros(size(fens.xyz, 1), 6))","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"There are no support conditions.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"applyebc!(dchi)","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The  the number of free (unknown) degrees of freedom is equal to the total number of degrees of freedom in the system.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"numberdofs!(dchi);\n\n\n#","category":"page"},{"location":"tutorials/circle_modal_tut.html#Assemble-the-global-discrete-system","page":"Modal analysis of a free-floating steel circle","title":"Assemble the global discrete system","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"using FinEtoolsFlexStructures.FEMMCorotBeamModule: FEMMCorotBeam\nfemm = FEMMCorotBeam(IntegDomain(fes, GaussRule(1, 2)), material);","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"For disambiguation we will refer to the stiffness and mass functions by qualifying them with the corotational-beam module, FEMMCorotBeamModule.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"using FinEtoolsFlexStructures.FEMMCorotBeamModule\nCB = FEMMCorotBeamModule","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Thus we can construct the stiffness and mass matrix as follows: Note that the finite element machine is the first argument. This provides access to the integration domain. The next argument is the geometry field, followed by the displacement, rotations, and incremental displacement/rotation fields.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"K = CB.stiffness(femm, geom0, u0, Rfield0, dchi);\nM = CB.mass(femm, geom0, u0, Rfield0, dchi);","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"We can compare the size of the stiffness matrix with the number of degrees of freedom that are unknown (20).","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"@show size(K)\n\n#","category":"page"},{"location":"tutorials/circle_modal_tut.html#Solve-the-free-vibration-problem","page":"Modal analysis of a free-floating steel circle","title":"Solve the free-vibration problem","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"oshift = (2*pi*15)^2","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The Arnoldi algorithm implemented in the well-known Arpack package is used to solve the generalized eigenvalue problem with the sparse matrices. As is common in structural dynamics, we request the smallest eigenvalues in absolute value (:SM).","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"using Arpack\nevals, evecs, nconv = eigs(Symmetric(K + oshift * M), Symmetric(M); nev=neigvs, which=:SM, explicittransform = :none);","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"First  we should check that the requested eigenvalues actually converged:","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"@show nconv == neigvs","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Make sure the eigenvalues and eigenvectors are stripped of the imaginary part.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"evals = real.(evals)\nevecs = real.(evecs)","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The eigenvalues (i. e. the squares of the angular frequencies) are returned in the vector evals. The mode shapes constitute the columns of the matrix evecs.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"@show size(evecs)","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The natural frequencies are obtained from the squares of the angular frequencies. We note the use of sqrt. which broadcast the square root over the array evals.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"fs = sqrt.([max(0, e - oshift) for e in evals]) / (2 * pi);\n\n#","category":"page"},{"location":"tutorials/circle_modal_tut.html#Comparison-of-computed-and-analytical-results","page":"Modal analysis of a free-floating steel circle","title":"Comparison of computed and analytical results","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The approximate and analytical frequencies are now reported.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"sigdig(n) = round(n * 10000) / 10000\nprintln(\"Approximate frequencies: $(sigdig.(fs)) [Hz]\")\n\n#","category":"page"},{"location":"tutorials/circle_modal_tut.html#Set-up-the-visualization-of-the-vibration-modes","page":"Modal analysis of a free-floating steel circle","title":"Set up the visualization of the vibration modes","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The animation will show one of the vibration modes overlaid on the undeformed geometry. The configuration during the animation needs to reflect rotations. The function update_rotation_field! will update the rotation field given a vibration mode.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"using FinEtoolsFlexStructures.RotUtilModule: update_rotation_field!","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The visualization utilities take advantage of the PlotlyJS library.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"using PlotlyJS\nusing VisualStructures: plot_space_box, plot_solid, render, react!, default_layout_3d, save_to_json","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The magnitude of the vibration modes (displacements  and rotations) will be amplified with this scale factor:","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"scale = 1.5","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"In order to handle variables inside loops correctly, we create a local scope with the let end block.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"vis(mode) = let","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"The extents of the box will be preserved during animation in order to eliminate changes in the viewing parameters.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"    tbox = plot_space_box(reshape(inflatebox!(boundingbox(fens.xyz), 0.3 * radius), 2, 3))","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"This is the geometry of the structure without deformation (undeformed). It is displayed as gray, partially transparent.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"    tenv0 = plot_solid(fens, fes; x=geom0.values, u=0.0 .* dchi.values[:, 1:3], R=Rfield0.values, facecolor=\"rgb(125, 155, 125)\", opacity=0.3);","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Initially the plot consists of the box and the undeformed geometry.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"    plots = cat(tbox, tenv0; dims=1)","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Create the layout for the plot. Set the size of the window.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"    layout = default_layout_3d(;width=600, height=600)","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Set the aspect mode to get the correct proportions.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"    layout[:scene][:aspectmode] = \"data\"","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Render the undeformed structure","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"    pl = render(plots; layout=layout, title=\"Mode $(mode)\")\n    sleep(2.115)","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"This is the animation loop.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Distribute a fraction of the selected eigenvector into the incremental displacement/rotation field.\nCreate the deformed configuration by defining displacement field u1 and rotation field Rfield1.\nCreate the plot for the deformed configuration, and add it to the list of plots.\nCall the react! function to update the display. Sleep for a brief period of time to give the display a chance to become current.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"    for xscale in scale .* sin.(collect(0:1:89) .* (2 * pi / 21))\n        scattersysvec!(dchi, xscale .* evecs[:, mode])\n        u1 = deepcopy(u0)\n        u1.values .= dchi.values[:, 1:3]\n        Rfield1 = deepcopy(Rfield0)\n        update_rotation_field!(Rfield1, dchi)\n        tenv1 = plot_solid(fens, fes; x=geom0.values, u=dchi.values[:, 1:3], R=Rfield1.values, facecolor=\"rgb(50, 55, 125)\");\n        plots = cat(tbox, tenv0, tenv1; dims=1)\n        react!(pl, plots, pl.plot.layout)\n        sleep(0.115)\n    end\nend\n\n#","category":"page"},{"location":"tutorials/circle_modal_tut.html#Visualize-vibration-mode","page":"Modal analysis of a free-floating steel circle","title":"Visualize vibration mode","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Animate the harmonic motion of the mode given as argument: vis(7)","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"using FinEtoolsFlexStructures.FESetCorotBeamModule: MASS_TYPE_CONSISTENT_NO_ROTATION_INERTIA,\nMASS_TYPE_CONSISTENT_WITH_ROTATION_INERTIA,\nMASS_TYPE_LUMPED_DIAGONAL_NO_ROTATION_INERTIA,\nMASS_TYPE_LUMPED_DIAGONAL_WITH_ROTATION_INERTIA\n\nresults = let\n    results = Dict()\n    for mtype in [\n        MASS_TYPE_CONSISTENT_NO_ROTATION_INERTIA,\n        MASS_TYPE_CONSISTENT_WITH_ROTATION_INERTIA,\n        MASS_TYPE_LUMPED_DIAGONAL_NO_ROTATION_INERTIA,\n        MASS_TYPE_LUMPED_DIAGONAL_WITH_ROTATION_INERTIA]\n        M = CB.mass(femm, geom0, u0, Rfield0, dchi; mass_type = mtype);\n\n        evals, evecs, nconv = eigs(Symmetric(K + oshift * M), Symmetric(M); nev=neigvs, which=:SM, explicittransform = :none);\n        evals = real.(evals)\n        evecs = real.(evecs)\n        results[mtype] = evals, evecs\n    end\n    results\nend\n\ncolors = [\n\"rgb(125, 15, 15)\",\n\"rgb(15, 155, 15)\",\n\"rgb(15, 15, 155)\",\n\"rgb(125, 115, 115)\"\n]\n\nevals = results[MASS_TYPE_CONSISTENT_NO_ROTATION_INERTIA][1]\nx = 1:length(evals); y = sqrt.([max(0, e - oshift) for e in evals]) / (2 * pi);\ntc0 = scatter(;x=x, y=y, mode=\"markers\", name = \"cons, wo\", line_color = \"rgb(215, 15, 15)\", marker = attr(size = 9, symbol = \"diamond-open\"))\nevals = results[MASS_TYPE_CONSISTENT_WITH_ROTATION_INERTIA][1]\nx = 1:length(evals); y = sqrt.([max(0, e - oshift) for e in evals]) / (2 * pi);\ntc1 = scatter(;x=x, y=y, mode=\"markers\", name = \"cons, w\", line_color = \"rgb(15, 215, 15)\", marker = attr(size = 9, symbol = \"triangle-down\"))\nevals = results[MASS_TYPE_LUMPED_DIAGONAL_NO_ROTATION_INERTIA][1]\nx = 1:length(evals); y = sqrt.([max(0, e - oshift) for e in evals]) / (2 * pi);\ntc2 = scatter(;x=x, y=y, mode=\"markers\", name = \"lumped, wo\", line_color = \"rgb(15, 15, 215)\", marker = attr(size = 9, symbol = \"x-open\"))\nevals = results[MASS_TYPE_LUMPED_DIAGONAL_WITH_ROTATION_INERTIA][1]\nx = 1:length(evals); y = sqrt.([max(0, e - oshift) for e in evals]) / (2 * pi);\ntc3 = scatter(;x=x, y=y, mode=\"markers\", name = \"lumped, w\", line_color = \"rgb(165, 165, 15)\", marker = attr(size = 9, symbol = \"square\"))","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"7, 8 (out of plane)         51.85                 52.29 9, 10 (in plane)            53.38                 53.97 11, 12 (out of plane)      148.8                 149.7 13, 14 (in plane)          151.0                 152.4 15, 16 (out of plane)      287.0                 288.3 17, 18 (in plane)          289.5                 288.3","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"rfs = vec(Float64[0 0 0 0 0 0 51.85 51.85 53.38 53.38 148.8 148.8 151.0 151.0 287.0 287.0 289.5 289.5])\n\nrtc = scatter(;x=collect(1:length(rfs)), y=rfs, mode=\"lines\", name = \"ref\", line_color = \"rgb(15, 15, 15)\")","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Set up the layout:","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"layout = Layout(;xaxis=attr(title=\"Mode\", type = \"linear\"), yaxis=attr(title=\"Frequency [hertz]\", type = \"linear\"), title = \"Comparison of mass types\")","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Plot the graphs:","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"config  = PlotConfig(plotlyServerURL=\"https://chart-studio.plotly.com\", showLink=true)\npl = plot([rtc, tc0, tc1, tc2, tc3], layout; config = config)\ndisplay(pl)\n\n\n#","category":"page"},{"location":"tutorials/circle_modal_tut.html#\"Mixed\"-mass-matrix","page":"Modal analysis of a free-floating steel circle","title":"\"Mixed\" mass matrix","text":"","category":"section"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"As the graph suggests we can try mixing together mass matrices computed from different assumptions (lumped versus consistent, with or without rotation inertia). No particular justification can be provided for these numbers other than best low-frequency matching for linear bars suggests that 50% can be taken lumped and 50% consistent. Here it is obviously more complicated due to the presence of rotation inertia.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"M = 0.5 .* CB.mass(femm, geom0, u0, Rfield0, dchi; mass_type = MASS_TYPE_LUMPED_DIAGONAL_NO_ROTATION_INERTIA) +\n    0.5 .* CB.mass(femm, geom0, u0, Rfield0, dchi; mass_type = MASS_TYPE_CONSISTENT_WITH_ROTATION_INERTIA);","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"With this mixed mass matrix we solve the free vibration problem again.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"evals, evecs, nconv = eigs(Symmetric(K + oshift * M), Symmetric(M); nev=neigvs, which=:SM, explicittransform = :none);","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"Plotting the newly obtained data on top of the previously presented data, we can observe sometimes substantial improvement of accuracy of the mixed-matrix formulation relative to the individual mass matrix types.","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"x = 1:length(evals); y = sqrt.([max(0, e - oshift) for e in evals]) / (2 * pi);\nmtc = scatter(;x=x, y=y, mode=\"markers\", name = \"mixed\", line_color = \"rgb(215, 15, 215)\", marker = attr(size = 9, symbol = \"circle\"))\nconfig  = PlotConfig(plotlyServerURL=\"https://chart-studio.plotly.com\", showLink=true)\npl = plot([rtc, tc0, tc1, tc2, tc3, mtc], layout; config = config)\ndisplay(pl)\n\nnothing","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"","category":"page"},{"location":"tutorials/circle_modal_tut.html","page":"Modal analysis of a free-floating steel circle","title":"Modal analysis of a free-floating steel circle","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html#Modal-analysis-of-a-free-floating-steel-circle:-three-dimensional-solid-model","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"","category":"section"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Source code: circle_3d_modal_conv_tut.jl","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html#Description","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Description","text":"","category":"section"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Vibration analysis of a free-floating steel ring. This is a benchmark from the NAFEMS Selected Benchmarks for Natural Frequency Analysis, publication: Test VM09: Circular Ring –  In-plane and Out-of-plane Vibration.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"The results can be compared with analytical expressions, but the main purpose is to compute data for extrapolation to the limit to predict the true natural frequencies.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html#Reference-frequencies","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Reference frequencies","text":"","category":"section"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"There will be 6 rigid body modes (zero natural frequencies).","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"The numerical results are due to the publication: NAFEMS Finite Element Methods & Standards, Abbassian, F., Dawswell, D. J., and Knowles, N. C. Selected Benchmarks for Natural Frequency Analysis, Test No.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Glasgow: NAFEMS, Nov., 1987.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"The reference values were analytically determined (Blevins, FORMULAS FOR DYNAMICS, ACOUSTICS AND VIBRATION, Table 4.16). Note that shear flexibility was neglected when computing the reference values.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Mode Reference Value (Hz) NAFEMS Target Value (Hz)\n7, 8 (out of plane) 51.85\n9, 10 (in plane) 53.38\n11, 12 (out of plane) 148.8\n13, 14 (in plane) 151.0\n15, 16 (out of plane) 287.0\n17, 18 (in plane) 289.5","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html#Goals","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Goals","text":"","category":"section"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Show convergence relative to reference values.\nCompute data for extrapolation to the limit to predict the true natural frequencies.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"#","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html#Definition-of-the-basic-inputs","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Definition of the basic inputs","text":"","category":"section"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"The finite element code realize on the basic functionality implemented in this package.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"using FinEtools\nusing FinEtoolsDeforLinear\nusing SymRCM\nusing Arpack","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"The material parameters may be defined with the specification of the units. The elastic properties are:","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"E = 200.0 * phun(\"GPa\")\nnu = 0.3;","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"The mass density is","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"rho = 8000 * phun(\"kg/m^3\")","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"The geometry consists of the radius of the circle, and the diameter of the circular cross-section.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"radius = 1.0 * phun(\"m\"); diameter = 0.1 * phun(\"m\");","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"We shall calculate these eigenvalues, but we are mostly interested in the first three  natural frequencies.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"neigvs = 18;","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"The mass shift needs to be applied since the structure is free-floating.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"oshift = (2*pi*15)^2","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"We will generate this many elements per radius of the cross-section, and along the length of the circular ring.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"results = let\n    results = []\n    for i in 1:3\n        nperradius, nL = 2^i, 20*2^i\n        tolerance = diameter/nperradius/100","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Generate the mesh in a straight cylinder.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"        fens, fes = H8cylindern(diameter/2, 2*pi, nperradius, nL)","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Select the nodes in the bases of the cylinder for future merging of the nodes.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"        z0l = selectnode(fens, plane = [0, 0, 1, 0], inflate = tolerance)\n        z2l = selectnode(fens, plane = [0, 0, 1, 2*pi], inflate = tolerance)","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Twist the straight cylinder into a ring.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"        for i in 1:count(fens)\n            a = fens.xyz[i, 3]\n            x = fens.xyz[i, 1]\n            y = fens.xyz[i, 2] + radius\n            fens.xyz[i, :] .= (x, y*cos(a), y*sin(a))\n        end","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Merge the nodes of the bases, which involves renumbering the connectivity.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"        fens, fes = mergenodes(fens, fes, tolerance, vcat(z0l, z2l))","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"If desired, visualize the mesh. File = \"ring.vtk\" vtkexportmesh(File, fens, fes) @async run(\"paraview.exe\" $File)","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Generate the material and the FEM machine.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"        MR = DeforModelRed3D\n        material = MatDeforElastIso(MR, rho, E, nu, 0.0)\n        femm = FEMMDeforLinearESNICEH8(MR, IntegDomain(fes, NodalTensorProductRule(3)), material)","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Set up the nodal fields for the geometry in the displacements.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"        geom = NodalField(fens.xyz)\n        u = NodalField(zeros(size(fens.xyz,1),3)) # displacement field","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Renumber the nodes to produce quicker linear equation solves.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"        p = let\n            C = connectionmatrix(femm, count(fens))\n            p = symrcm(C)\n        end\n        numberdofs!(u, p)","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Now set up the discrete model.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"        associategeometry!(femm,  geom)\n        K  = stiffness(femm, geom, u)\n        M = mass(femm, geom, u)","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Solve the free vibration problem.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"        evals, evecs, nconv = eigs(K+oshift*M, M; nev=neigvs, which=:SM, explicittransform = :none)","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Correct for the mass shift.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"        evals = evals .- oshift;\n        sigdig(n) = round(n * 10000) / 10000\n        fs = real(sqrt.(complex(evals)))/(2*pi)\n        println(\"Eigenvalues: $(sigdig.(fs)) [Hz]\")\n        push!(results, (fs[6+1], fs[6+3], fs[6+5]))\n    end\n    results # return these values from the block\nend\n\n@show results\n\n#","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html#Richardson-extrapolation","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Richardson extrapolation","text":"","category":"section"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Here we will use Richardson extrapolation from the three sets of data. This will allow us to predict the convergence rate and the true solution for each of the three frequencies (or rather the pairs of frequencies, 7 and 8, 9 and 10, and 11 and 12).","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"We will immediately set up the convergence plots. We will extrapolate and then compute from that the normalized error to be plotted with respect to the refinement factors (which in this case are 4, 2, and 1). We use the refinement factor as a convenience: we will calculate the element size by dividing the circumference of the ring with a number of elements generated circumferentially.","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"using FinEtools.AlgoBaseModule: richextrapol\n\nusing Gnuplot\n@gp  \"set terminal windows 0 \"  :-","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Modes 7 and 8","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"sols = [r[1] for r in results]\nresextrap = richextrapol(sols, [4.0, 2.0, 1.0])\nprint(\"Predicted frequency 7 and 8: $(resextrap[1])\\n\")\nerrs = abs.(sols .- resextrap[1])./resextrap[1]\n@gp  :- 2*pi*radius./[80, 160, 320] errs \" lw 2 lc rgb 'red' with lp title 'Mode 7, 8' \"  :-","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Modes 9 and 10","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"sols = [r[2] for r in results]\nresextrap = richextrapol(sols, [4.0, 2.0, 1.0])\nprint(\"Predicted frequency 9 and 10: $(resextrap[1])\\n\")\nerrs = abs.(sols .- resextrap[1])./resextrap[1]\n@gp  :- 2*pi*radius./[80, 160, 320] errs \" lw 2 lc rgb 'green' with lp title 'Mode 9, 10' \"  :-","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"Modes 11 and 12","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"sols = [r[3] for r in results]\nresextrap = richextrapol(sols, [4.0, 2.0, 1.0])\nprint(\"Predicted frequency 11 and 12: $(resextrap[1])\\n\")\nerrs = abs.(sols .- resextrap[1])./resextrap[1]\n@gp  :- 2*pi*radius./[80, 160, 320] errs \" lw 2 lc rgb 'blue' with lp title 'Mode 11, 12' \"  :-\n\n@gp  :- \"set xrange [0.01:0.1]\" \"set logscale x\" :-\n@gp  :- \"set logscale y\" :-\n@gp  :- \"set xlabel 'Element size'\" :-\n@gp  :- \"set ylabel 'Normalized error [ND]'\" :-\n@gp  :- \"set title '3D: Convergence of modes 7, ..., 12'\"","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"","category":"page"},{"location":"tutorials/circle_3d_modal_conv_tut.html","page":"Modal analysis of a free-floating steel circle: three-dimensional solid model","title":"Modal analysis of a free-floating steel circle: three-dimensional solid model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Static analysis of clamped twisted beam","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Source code: twisted_beam_tut.jl","category":"page"},{"location":"tutorials/twisted_beam_tut.html#Description","page":"- Introduce definition of the shell model.","title":"Description","text":"","category":"section"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"The initially twisted cantilever beam is one of the standard test problems for verifying the finite-element accuracy [1]. The beam is clamped at one end and loaded either with unit in-plane or unit out-of-plane force at the other. The centroidal axis of the beam is straight at the undeformed  configuration, while its cross-sections are twisted about the centroidal axis from 0 at the clamped end to pi/2 at the free end.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Reference deflection in the direction of the applied force. | Cross section thickness       | Loading in the Z direction | Loading in the Y direction | | –––-   |     –––-  |  –––- | | t = 0.32 | 0.005425   |    0.001753  | | t = 0.0032 |  0.005256  |  0.001294    |","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"References:","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"[1] MacNeal,  R. H., and R. L. Harder, “A Proposed Standard Set of Problems to Test Finite Element Accuracy,” Finite Elements in Analysis Design, vol. 11, pp. 3–20, 1985.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"[2] Simo,  J. C., D. D. Fox, and M. S. Rifai, “On a Stress Resultant Geometrically Exact Shell Model. Part II: The Linear Theory; Computational Aspects,” Computational Methods in Applied Mechanical Engineering, vol. 73, pp. 53–92, 1989.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"[3] Zupan D, Saje M (2004) On \"A proposed standard set of problems to test finite element accuracy\": the twisted beam. Finite Elements in Analysis and Design 40: 1445-1451.","category":"page"},{"location":"tutorials/twisted_beam_tut.html#Goals","page":"- Introduce definition of the shell model.","title":"Goals","text":"","category":"section"},{"location":"tutorials/twisted_beam_tut.html#Introduce-definition-of-the-shell-model.","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"","category":"section"},{"location":"tutorials/twisted_beam_tut.html#Calculate-the-discrete-model-quantities-and-solve-the-static-equilibrium-problem.","page":"- Introduce definition of the shell model.","title":"- Calculate the discrete model quantities and solve the static equilibrium problem.","text":"","category":"section"},{"location":"tutorials/twisted_beam_tut.html#Demonstrate-visualization-of-the-resultant-section-forces-and-moments.","page":"- Introduce definition of the shell model.","title":"- Demonstrate visualization of the resultant section forces and moments.","text":"","category":"section"},{"location":"tutorials/twisted_beam_tut.html#Definition-of-the-basic-inputs","page":"- Introduce definition of the shell model.","title":"Definition of the basic inputs","text":"","category":"section"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"The finite element code relies on the basic functionality implemented in this package.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"using LinearAlgebra\nusing FinEtools\nusing FinEtoolsDeforLinear\nusing FinEtoolsFlexStructures.FESetShellT3Module: FESetShellT3\nusing FinEtoolsFlexStructures.FEMMShellT3FFModule\nusing FinEtoolsFlexStructures.RotUtilModule: initial_Rfield, update_rotation_field!\nusing FinEtools.MeshExportModule.VTKWrite: vtkwrite","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"The inputs are defined in consistent units. The elastic properties are:","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"E = 0.29e8;\nnu = 0.22;","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"The material is elastic isotropic.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"mater = MatDeforElastIso(DeforModelRed3D, E, nu)","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Here are the cross-section width and the cantilevered length of the beam.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"W = 1.1;\nL = 12.0;","category":"page"},{"location":"tutorials/twisted_beam_tut.html#Reference-Solutions","page":"- Introduce definition of the shell model.","title":"Reference Solutions","text":"","category":"section"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"The reference solutions are defined by these tuples of values: thickness, magnitude of the force, direction of the force, and the reference deflection along the force.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"params_thicker_dir_3 = (t = 0.32, force = 1.0, dir = 3, uex = 0.005424534868469);\nparams_thicker_dir_2 = (t = 0.32, force = 1.0, dir = 2, uex = 0.001753248285256);\n\nparams_thinner_dir_3 = (t = 0.0032, force = 1.0e-6, dir = 3, uex = 0.005256);\nparams_thinner_dir_2 = (t = 0.0032, force = 1.0e-6, dir = 2, uex = 0.001294);","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Now select one particular simulation. Here we go with the thicker shell and the direction of the load 3:","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"params = params_thicker_dir_3","category":"page"},{"location":"tutorials/twisted_beam_tut.html#Mesh-generation","page":"- Introduce definition of the shell model.","title":"Mesh generation","text":"","category":"section"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"The mesh is initially generated for a rectangular 2d domain. The element size can be controlled with these two variables:","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"nL = 48;\nnW = 8;\nnL, nW = 8, 4\n\nfens, fes = T3block(L, W, nL, nW, :a);","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"The 2d mesh is expanded into a three dimensional domain, and the locations of the nodes are tweaked to produce the pre twisted shape.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"fens.xyz = xyz3(fens)\nfor i in 1:count(fens)\n    a = fens.xyz[i, 1] / L * (pi / 2)\n    y = fens.xyz[i, 2] - (W / 2)\n    z = fens.xyz[i, 3]\n    fens.xyz[i, :] = [fens.xyz[i, 1], y * cos(a) - z * sin(a), y * sin(a) + z * cos(a)]\nend","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"The implementation of the 3-node triangle shell element is in this module. We will refer to the functions that we need from this module by referencing them relative to the module name.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"t3ffm = FEMMShellT3FFModule","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"The shell elements have a type FESetShellT3. The type of the mesh is the plain isoparametric triangle, which is instructed to delegate to the shell element.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"sfes = FESetShellT3()\naccepttodelegate(fes, sfes)","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Use the convenience function to make an instance of the finite element model machine for the T3FF shell.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"femm = t3ffm.make(IntegDomain(fes, TriRule(1), params.t), mater)","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Construct the requisite fields, geometry and displacement. Initialize configuration variables. Displacements are all zero, the rotation matrices are all identities.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"geom0 = NodalField(fens.xyz)\nu0 = NodalField(zeros(size(fens.xyz, 1), 3))\nRfield0 = initial_Rfield(fens)\ndchi = NodalField(zeros(size(fens.xyz, 1), 6))","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Apply supports. The clamped end is selected based on the X coordinate. We will select all nodes within a box, and the box is slightly inflated using the geometrical tolerance based on the spacing of the nodes.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"tolerance = min(W / nW, L / nL) / 100\n\nl1 = selectnode(fens; box = Float64[0 0 -Inf Inf -Inf Inf], inflate = tolerance)\nfor i in 1:6\n    setebc!(dchi, l1, true, i)\nend\napplyebc!(dchi)\nnumberdofs!(dchi);","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Associate the finite element model machine with geometry. The shell formulation requires knowledge of the normals to the shell surface, and that information is computed from the positions of the nodes.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"t3ffm.associategeometry!(femm, geom0)","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Assemble the system stiffness matrix.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"K = t3ffm.stiffness(femm, geom0, u0, Rfield0, dchi);","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Though load is a concentrated force applied at the center of the beam. First we select the node.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"nl = selectnode(fens; box = Float64[L L 0 0 0 0], tolerance = tolerance)","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Next we create a mesh of the loaded boundary (i.e. the selected node), so that we can integrate along it.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"loadbdry = FESetP1(reshape(nl, 1, 1))","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Now we create a finite element model machine that knows how to integrate. Since our boundary consists of a single point, we use a point rule.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"lfemm = FEMMBase(IntegDomain(loadbdry, PointRule()))","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Now we create a force intensity to represent the loading.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"v = FFlt[0, 0, 0, 0, 0, 0]\nv[params.dir] = params.force\nfi = ForceIntensity(v);","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Finally we computed the load vector corresponding to the force intensity.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"F = distribloads(lfemm, geom0, dchi, fi, 3);","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"The system of linear algebraic equations of balance is solved for the displacements and rotations.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"U = K \\ F","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"The vector of unknowns is now distributed into a field.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"scattersysvec!(dchi, U[:])","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"The deflection in the correct direction at the loaded node is now extracted.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"tipdefl = dchi.values[nl, params.dir][1]\n@show tipdefl / params.uex * 100","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"Generate a graphical display of resultants. The resultants only make sense in a coordinate system aligned with the shell surface. Here we construct such a coordinate system by using the tangent directions to the surface to construct the normal, and the vector along the global X axis will serve as the first basis vector of the local cartesian coordinate system.","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"function updatecsys!(csmatout::FFltMat, XYZ::FFltMat, tangents::FFltMat, fe_label::FInt)","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"first the normal","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"    cross3!(view(csmatout, :, 3), view(tangents, :, 1), view(tangents, :, 2))\n    csmatout[:, 3] ./= norm(view(csmatout, :, 3))\n    csmatout[:, 1] .= (1.0, 0.0, 0.0)\n    cross3!(view(csmatout, :, 2), view(csmatout, :, 3), view(csmatout, :, 1))\n    return csmatout\nend\nocsys = CSys(3, 3, updatecsys!)\nscalars = []\nfor nc in 1:3\n    fld = fieldfromintegpoints(femm, geom0, dchi, :moment, nc, outputcsys = ocsys)","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"fld = elemfieldfromintegpoints(femm, geom0, dchi, :moment, nc)","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"    push!(scalars, (\"m$nc\", fld.values))\nend\nvtkwrite(\"twisted_beam-m.vtu\", fens, fes; scalars = scalars, vectors = [(\"u\", dchi.values[:, 1:3])])\nscalars = []\nfor nc in 1:3\n    fld = fieldfromintegpoints(femm, geom0, dchi, :membrane, nc, outputcsys = ocsys)","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"fld = elemfieldfromintegpoints(femm, geom0, dchi, :moment, nc)","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"    push!(scalars, (\"n$nc\", fld.values))\nend\nvtkwrite(\"twisted_beam-n.vtu\", fens, fes; scalars = scalars, vectors = [(\"u\", dchi.values[:, 1:3])])\nscalars = []\nfor nc in 1:2\n    fld = fieldfromintegpoints(femm, geom0, dchi, :shear, nc, outputcsys = ocsys)","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"fld = elemfieldfromintegpoints(femm, geom0, dchi, :moment, nc)","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"    push!(scalars, (\"q$nc\", fld.values))\nend\nvtkwrite(\"twisted_beam-q.vtu\", fens, fes; scalars = scalars, vectors = [(\"u\", dchi.values[:, 1:3])])\n\ntrue","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"","category":"page"},{"location":"tutorials/twisted_beam_tut.html","page":"- Introduce definition of the shell model.","title":"- Introduce definition of the shell model.","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorials/tutorials.html","page":"Tutorials","title":"Tutorials","text":"Table of contents","category":"page"},{"location":"tutorials/tutorials.html#Tutorials","page":"Tutorials","title":"Tutorials","text":"","category":"section"},{"location":"tutorials/tutorials.html#Beam-Dynamics","page":"Tutorials","title":"Beam Dynamics","text":"","category":"section"},{"location":"tutorials/tutorials.html","page":"Tutorials","title":"Tutorials","text":"Beam vibration\nAircraft frame test rig: Geometry\nAircraft frame test rig: Visualization\nAircraft frame test rig: Modal analysis\nAircraft frame test rig: Harmonic Vibration Analysis\nPrestressed column: Fundamental natural frequency\nL-shaped  aluminum frame: Vibration under applied loading\nFree vibration of steel ring: Introduction\nFree vibration of steel ring: Beam model convergence\nFree vibration of steel ring: Solid model convergence\nFast Lagrange top\nBeam with time-dependent axial force (Mathieu problem)","category":"page"},{"location":"tutorials/tutorials.html#Shell-Statics","page":"Tutorials","title":"Shell Statics","text":"","category":"section"},{"location":"tutorials/tutorials.html","page":"Tutorials","title":"Tutorials","text":"Twisted beam deflection","category":"page"},{"location":"tutorials/garteur_hva_tut.html#GARTEUR-SM-AG19-Testbed:-Harmonic-Vibration-Analysis","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Source code: garteur_hva_tut.jl","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Description","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Description","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"This virtual test application is based on the test article used by the GARTEUR Structures & Materials Action Group 19 which organized a Round Robin exercise where 12 European laboratories tested a single structure between 1995 and 1997. The benchmark structure was a laboratory structure built to simulate the dynamic behaviour of an aeroplane. The structure was initially built for a benchmark study on experimental modal analysis conducted by the Structures and Materials Action Group (SM-AG19) of the Group for Aeronautical Research and Technology in EURope (GARTEUR). The test-bed was designed and manufactured by ONERA, France.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"(Image: )","category":"page"},{"location":"tutorials/garteur_hva_tut.html#References","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"References","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"[1] Ground Vibration Test Techniques, compiled by A Gravelle, GARTEUR Structures & Materials Action Group 19 Technical report TP-115, 1999. [2] Etienne Balmes, Jan R. Wright, GARTEUR GROUP ON GROUND VIBRATION TESTING | RESULTS FROM THE TEST OF A SINGLE STRUCTURE BY 12 LABORATORIES IN EUROPE, Proceedings of DETC'97, 1997 ASME Design Engineering Technical Conferences, September 14-17, 1997, Sacramento, California. [3] 3M(TM) Viscoelastic Damping Polymer 112 Series,  Technical Data, May 2017.","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Goals","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Goals","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Show how to construct model from multiple connected beams.\nDemonstrate the use of massless connectors.\nDemonstrate the use of point masses.\nDemonstrate the use of grounded springs.\nIllustrate verification of the solution of the free vibration problem.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"#","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Geometry-of-the-testbed-airplane.","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Geometry of the testbed airplane.","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"It was a rather simple structure which was reasonably dynamically representative of a simple airplane structure. It was composed of several beams simulating a fuselage with wings and a tail. Wing tip drums allowed to adjust bending and torsion frequencies similarly to airplane ones, with some very close modal frequencies.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"(Image: )","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The script included below defines the geometry of the structure, the cross-sectional properties, the connectivity, and the location of the nodes.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"include(\"garteur_geometry_tut.jl\")","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The geometry is visualized in the tutorial garteurgeometryvis_tut.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"#","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Material","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Material","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Material properties can be now used to create a material: isotropic elasticity model of the FinEtoolsDeforLinear package is instantiated.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"using FinEtoolsDeforLinear","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The material of the structure is aluminum. The elastic modulus:","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"E = 70000.0 * phun(\"MPa\")\nnu = 0.31;","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The mass density:","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"rho = 2700 * phun(\"kg/m^3\")\nalu = MatDeforElastIso(DeforModelRed3D, rho, E, nu, 0.0)","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Material for the massless connectors has the mass density set to zero; otherwise it has the same properties as the aluminum material  of the structure.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"massless = MatDeforElastIso(DeforModelRed3D, 0.0, alu.E, alu.nu, 0.0)","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"This simple function returns material based on the label of the beam elements.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"getmaterial(labl) = begin\n    if labl >= 7\n        return massless\n    end\n    return alu\nend\n\n\n\n#","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Fields","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Fields","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Now we start constructing the discrete finite element model. We begin by constructing the requisite fields, geometry and displacement. These are the so-called \"configuration variables\", all initialized to 0. This is that geometry field.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"geom0 = NodalField(fens.xyz)","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"This is the displacement field, three unknown displacements per node.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"u0 = NodalField(zeros(size(fens.xyz, 1), 3))","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"This is the rotation field, three unknown rotations per node are represented with a rotation matrix, in total nine numbers. The utility function initial_Rfield","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"using FinEtoolsFlexStructures.RotUtilModule: initial_Rfield\nRfield0 = initial_Rfield(fens)","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Finally, this is the displacement and rotation field for incremental changes, incremental displacements and incremental rotations. In total, 6 unknowns per node. Note that the the incremental displacements are in general complex.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"dchi = NodalField(0.0im .* zeros(size(fens.xyz, 1), 6))","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"There are no support conditions.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"applyebc!(dchi)","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The  the number of free(unknown) degrees of freedom is equal to the total number of degrees of freedom in the system.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"numberdofs!(dchi);\n\n#","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Identify-support-points-and-locations-of-sensors","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Identify support points and locations of sensors","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Suspension points are at these nodes:","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"suspln = selectnode(fens; box = initbox!(Float64[], vec([0.0*L 0.0*L 0.805*L])), inflate = tolerance)\nsusprn = selectnode(fens; box = initbox!(Float64[], vec([0.0*L -0.0*L 0.805*L])), inflate = tolerance)\nsuspbn = selectnode(fens; box = initbox!(Float64[], vec([-2.0*L 0.0*L 0.0*L])), inflate = tolerance)","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Find out at which nodes the sensors are:","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"sensors = Dict()\nsensors = let","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The sensors at the tip of the left and right wing drum","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"    sensor112n = selectnode(fens; box = initbox!(Float64[], vec([+1.8*L 9.8*L 0.96*L])), inflate = tolerance)\n    sensors[112] = sensor112n\n    sensor12n = selectnode(fens; box = initbox!(Float64[], vec([+1.8*L -9.8*L .96*L])), inflate = tolerance)\n    sensors[12] = sensor12n\n    sensor111n = selectnode(fens; box = initbox!(Float64[], vec([-1.8*L 9.8*L 0.96*L])), inflate = tolerance)\n    sensors[111] = sensor111n\n    sensor11n = selectnode(fens; box = initbox!(Float64[], vec([-1.8*L -9.8*L .96*L])), inflate = tolerance)\n    sensors[11] = sensor11n","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The joint between the horizontal and vertical tail parts","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"    sensor202n = selectnode(fens; box = initbox!(Float64[], vec([-8*L 0 3.8*L])), inflate = tolerance)\n    sensors[202] = sensor202n\n    sensors\nend\n\n#","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Assemble-the-global-discrete-system","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Assemble the global discrete system","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"For disambiguation we will refer to the stiffness and mass functions by qualifying them with the corotational-beam module, FEMMCorotBeamModule.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"using FinEtoolsFlexStructures.FEMMCorotBeamModule\nCB = FEMMCorotBeamModule","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Note that we have an array of finite element sets. We compute the matrices for each set separately and accumulate them into the final overall matrix. Thus we can construct the stiffness and mass matrix as follows.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"using  SparseArrays","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Loop over all the finite element sets and add up their contributions, the stiffness in the mass matrix for each.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Kf, Kd, M = let\n    Kf = spzeros(dchi.nfreedofs, dchi.nfreedofs)\n    Kd = spzeros(dchi.nfreedofs, dchi.nfreedofs)\n    M = spzeros(dchi.nfreedofs, dchi.nfreedofs)\n    for fes in fesa\n        labl  = fes.label[1]\n        femm = CB.FEMMCorotBeam(IntegDomain(fes, GaussRule(1, 2)), getmaterial(labl));\n        if labl == 7 # connectors representing the damping layer\n            Kd += CB.stiffness(femm, geom0, u0, Rfield0, dchi);\n        else\n            Kf += CB.stiffness(femm, geom0, u0, Rfield0, dchi);\n        end\n        M += CB.mass(femm, geom0, u0, Rfield0, dchi);\n    end\n    Kf, Kd, M\nend\n\n#","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Additional-concentrated-masses.","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Additional concentrated masses.","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"using LinearAlgebra\n\nusing FinEtoolsFlexStructures.FEMMPointMassModule\nPM = FEMMPointMassModule","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"There is a sensor on the tail.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"femmcm1 =  PM.FEMMPointMass(IntegDomain(FESetP1(reshape(sensors[202], 1, 1)), PointRule()), FFltMat(2*L*L/5*L/5*2*rho*LinearAlgebra.I(3)));","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"These are the forward/interior locations on the wing drums where the compensation masses are attached.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"mass1n = selectnode(fens; box = initbox!(Float64[], vec([1.8*L 9.2*L .96*L])), inflate = tolerance)\nmass2n = selectnode(fens; box = initbox!(Float64[], vec([1.8*L -9.2*L .96*L])), inflate = tolerance)\nfemmcm2 =  PM.FEMMPointMass(IntegDomain(FESetP1(reshape([mass1n; mass2n;], 2, 1)), PointRule()), FFltMat(0.2*phun(\"kg\")*LinearAlgebra.I(3)));\n\nMp = PM.mass(femmcm1, geom0, u0, Rfield0, dchi) + PM.mass(femmcm2, geom0, u0, Rfield0, dchi);\n\n#","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Bungee-supports","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Bungee supports","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"This is the assumed stifffness of the bungee cords (each one separately).","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"bungeecoefficient = 4000*phun(\"N/m\");\n\nusing LinearAlgebra\n\nusing FinEtoolsFlexStructures.FEMMPointGroundedSpringModule\nBS = FEMMPointGroundedSpringModule","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"There are three suspension points at the top of the fuselage. We assume that these bungee supports exert only reaction in the vertical direction.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"femmbs =  BS.FEMMPointGroundedSpring(IntegDomain(FESetP1(reshape([suspln; susprn; suspbn;], 3, 1)), PointRule()),\nFFltMat([bungeecoefficient*[0;0;1]*[0;0;1]' 0*LinearAlgebra.I(3); 0*LinearAlgebra.I(3) 0*LinearAlgebra.I(3)]));\n\nKb = BS.stiffness(femmbs, geom0, u0, Rfield0, dchi)\n\n\n\n#","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Damping","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Damping","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The overall damping ratios measured in the physical experiments were approximately 1%. Damping levels thought appropriate for obtaining realistic damping were obtained through the use of a viscoelastic layer glued to the wing beam with an aluminum constraining plate on top.","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Viscoelastic-damping-layer","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Viscoelastic damping layer","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The properties of the material of the viscoelastic layer were described in the technical specification [3]. Since the properties are frequency dependent, we take as a representative value the numbers obtained for 20 Hz.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The viscoelastic used was the 3M acrylic viscoelastic polymer ISD 112 in the form of a tape of 76 mm width with thickness of 50 microm.  This material is particularly well suited for the testbed operating range of 5-50 Hz and at 20 degrees C where the loss factor is near its peak of 0.4 [3]. These are representative quantities taken at 20 Hz.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"eta = 0.5\nomega_5_50 = 2*pi*20","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The connectors between the wing beam and the constraining plate are taken as representative of the stiffness of the constraining layer. The viscoelastic damping is then taken as proportional to this stiffness.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Cd = (eta / omega_5_50) .* Kd","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Aluminum-structure","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Aluminum structure","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"We assume the loss factor of the fuselage, wing, and tail to be 0.01. This can be used to derive the damping model for these parts of the aircraft structure in the form of Rayleigh damping.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"zeta= 0.01/2; # damping ratio\nzeta_1= zeta; # damping ratio for mode 1\nzeta_2= zeta; # damping ratio for mode 2","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Stiffness and mass proportional damping parameters.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"omega_1=2*pi*6; # Guess\nomega_2=2*pi*30; # Guess\nrdmass = (2*1.0/(omega_2^2-omega_1^2)).*[omega_2^2 -omega_1^2]*[zeta_1*omega_1; zeta_2*omega_2];\nrdstiffness = (2*1.0/(omega_2^2-omega_1^2)).*[-1 1]*[zeta_1*omega_1; zeta_2*omega_2];","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The airframe damping matrix is a mixture of the mass matrix and the stiffness matrix.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Cf = rdmass .* M + rdstiffness .* Kf;","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"These are the system matrices. The stiffness consists of the contribution of the airframe, the connectors between the wing components, and the bungees of the suspension.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Kt = Kf + Kd + Kb","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The mass matrix is the contribution of the structure and the attached point masses (compensation masses).","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Mt = M + Mp","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The damping matrix is composed of the damping of the overall structure, and of the damping layer (the connectors between the wing components).","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Ct = Cf + Cd\n\n#","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Loading","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Loading","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Here we assume that the stinger  was attached at the location of the sensor","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The force is vertical (in the Z direction) and the magnitude of the force","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"is arbitrary.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"forceat = 12\nfmagn= 1.0;\nloadbdry = FESetP1(reshape(sensors[forceat], 1, 1))\nlfemm = FEMMBase(IntegDomain(loadbdry, PointRule()))","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The force is applied in the vertical direction, and we assume it is positive upwards.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"fi = ForceIntensity(FFlt[0, 0.0, -fmagn, 0, 0, 0]);","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The force loading is now integrated over the \"volume\" of the integration domain.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"F = CB.distribloads(lfemm, geom0, dchi, fi, 3);\n\n#","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Solve-the-Harmonic-vibration-problem","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Solve the Harmonic vibration problem","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The frequency sweep will start at fromf and continue through the frequency tof.  The frequencies will be logarithmically distributed throughout this range.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"fromf = 3.0\ntof = 70.0\nnf = 150\nfrequencies = logspace(log10(fromf), log10(tof), nf);","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Only a single number per sensor will be collected, the Z direction displacement.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"receptance12 = fill(0.0im, nf)\nreceptance112 = fill(0.0im, nf)","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Now Loop over","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"for   fi in 1:length(frequencies)\n    f =  frequencies[fi];\n    om = 2*pi*f;","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Solve the system of complex  equations of balance:","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"    U = (-om^2*Mt + 1im*om*Ct + Kt) \\ F","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Distribute the vector of the solution:","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"    scattersysvec!(dchi, U)","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Now sample the solution at the locations of the two sensors, 12 and 112:","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"    v = fill(0.0im, 6)\n    gathervalues_asvec!(dchi, v, sensors[12])\n    p_d = v[1:3];\n    receptance12[fi] = p_d[3]/fmagn;\n    gathervalues_asvec!(dchi, v, sensors[112])\n    p_d = v[1:3];\n    receptance112[fi] = p_d[3]/fmagn;\nend","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The receptances were calculated above. The mobility and accelerance may be obtained in a postprocessing step.","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"oms = (2*pi) .* frequencies;\nmobility12 = receptance12 .* (-1im*oms);\nmobility112 = receptance112 .* (-1im*oms);\naccelerance12 = receptance12 .* (-oms.^2);\naccelerance112 = receptance112 .* (-oms.^2);\n\nresults = Dict()\nresults[12] = Dict(\"receptance\"=>receptance12, \"mobility\"=>mobility12, \"accelerance\"=>accelerance12)\nresults[112] = Dict(\"receptance\"=>receptance112, \"mobility\"=>mobility112, \"accelerance\"=>accelerance112)\n\n#","category":"page"},{"location":"tutorials/garteur_hva_tut.html#Present-the-results-graphically","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"Present the results graphically","text":"","category":"section"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"using Gnuplot","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Plot the amplitude of the response curves. We output two curves. The first for the driving-point FRF:","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"quantity = \"accelerance\"; units = \"m/s^2/N\"\noutputat = 12\ny = abs.(results[outputat][quantity]) / phun(units)\n@gp  \"set terminal windows 0 \"  :-\n@gp  :- frequencies y \" lw 2 lc rgb 'blue' with lines title 'output at $(outputat)' \"  :-","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The second for the cross transfer:","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"outputat = 112\ny = abs.(results[outputat][quantity]) / phun(units)\n@gp  :- frequencies y \" lw 2 lc rgb 'red' with lines title 'output at $(outputat)' \"  :-\n@gp  :- \"set logscale y\" :-\n@gp  :- \"set xlabel 'Frequency [Hz]'\" :-\n@gp  :- \"set ylabel 'abs(H) [$(units)]'\" :-\n@gp  :- \"set title 'Force at $(forceat), $(quantity)'\"","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"Plot the phase shift of the response curves. Again we output two curves, the first for the driving-point FRF:","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"outputat = 12\ny = atan.(imag(results[outputat][quantity]), real(results[outputat][quantity]))/pi*180\n@gp  \"set terminal windows 1 \"  :-\n@gp  :- frequencies y \" lw 2 lc rgb 'blue' with lines title 'output at $(outputat)' \"  :-","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"The second for the cross transfer:","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"outputat = 112\ny = atan.(imag(results[outputat][quantity]), real(results[outputat][quantity]))/pi*180\n@gp  :- frequencies y \" lw 2 lc rgb 'red' with lines title 'output at $(outputat)' \"  :-\n@gp  :- \"set xlabel 'Frequency [Hz]'\" :-\n@gp  :- \"set ylabel 'Phase shift [deg]'\" :-\n@gp  :- \"set title 'Force at $(forceat), $(quantity)'\"\n\n\nnothing","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"","category":"page"},{"location":"tutorials/garteur_hva_tut.html","page":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","title":"GARTEUR SM-AG19 Testbed: Harmonic Vibration Analysis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html#GARTEUR-SM-AG19-Testbed:-Construction-of-the-geometry","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"","category":"section"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Source code: garteur_geometry_vis_tut.jl","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html#Description","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"Description","text":"","category":"section"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"This virtual test application is based on the test article used by the GARTEUR Structures & Materials Action Group 19 which organized a Round Robin exercise where 12 European laboratories tested a single structure between 1995 and 1997. The benchmark structure was a laboratory structure built to simulate the dynamic behaviour of an aeroplane. The structure was initially built for a benchmark study on experimental modal analysis conducted by the Structures and Materials Action Group (SM-AG19) of the Group for Aeronautical Research and Technology in EURope (GARTEUR). The test-bed was designed and manufactured by ONERA, France.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"(Image: )","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html#References","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"References","text":"","category":"section"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"[GARTEUR] Ground Vibration Test Techniques, compiled by A Gravelle, GARTEUR Structures & Materials Action Group 19 Technical report TP-115, 1999.\n[BW] Etienne Balmes, Jan R. Wright, GARTEUR GROUP ON GROUND VIBRATION TESTING | RESULTS FROM THE TEST OF A SINGLE STRUCTURE BY 12 LABORATORIES IN EUROPE, Proceedings of DETC'97, 1997 ASME Design Engineering Technical Conferences, September 14-17, 1997, Sacramento, California.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html#Goals","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"Goals","text":"","category":"section"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Show how to construct model from multiple connected beams.\nDemonstrate the use of massless connectors.\nVisualize the structure interactively.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"#","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html#Geometry-of-the-testbed-airplane.","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"Geometry of the testbed airplane.","text":"","category":"section"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"The aluminum testbed was a rather simple structure which was reasonably dynamically representative of a simple airplane structure GARTEUR. It was composed of several beams simulating a fuselage with wings and a tail. Wing tip drums allowed to adjust bending and torsion frequencies similarly to airplane ones, with some very close modal frequencies.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"(Image: )","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"The script included below defines the geometry of the structure, the cross-sectional properties, the connectivity, and the location of the nodes.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"include(\"garteur_geometry_tut.jl\")\n\n#","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html#Basic-visualization","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"Basic visualization","text":"","category":"section"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Here we use the PlotlyJS plotting library, with some simple utilities for generating geometry of beams.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"using PlotlyJS\nusing VisualStructures: plot_solid, plot_space_box, render, default_layout_3d, save_to_json","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"The colors are used to help distinguish between the individual parts of the model.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"colors = [\n\"rgb(125, 155, 155)\",  # 1 body\n\"rgb(125, 155, 155)\",  # 2 wing\n\"rgb(125, 155, 155)\",  # 3 drums\n\"rgb(125, 155, 155)\",  # 4 vertical tail\n\"rgb(125, 155, 155)\",  # 5 horizontal tail\n\"rgb(125, 155, 155)\",  # 6 constraining plate\n\"rgb(15, 15, 155)\",  # 7 massless connectors: wing beam to plate\n\"rgb(125, 15, 15)\",  # 8 massless connectors: wing beam to drums\n\"rgb(125, 175, 15)\",  # 9 massless connectors: fuselage to wing beam\n\"rgb(125, 175, 15)\",  # 10 massless connectors: fuselage to tail\n\"rgb(15, 155, 155)\",  # 11 massless connectors: sensors, point masses\n]","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"The geometry is defined in terms of \"traces\" (a trace is in the PlotlyJS parlance a graphical object; it could be a curve, surface, and a lot of other things). It is the name for a graphical object in PlotlyJS. The two points below define a box, which is helpful when setting the extents of the graphics display.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"tbox = plot_space_box([[-1.2 * L -1.2 * L -1.2 * L]; [+1.2 * L +1.2 * L +1.2 * L]])","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"For each finite element set in the array fesa, generate the graphics to represent that object.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"traces = let traces = tbox\n    for fes in fesa\n        labl  = fes.label[1]\n        tm = plot_solid(fens, fes; facecolor=colors[labl]);\n        traces = cat(traces, tm; dims = 1)\n    end\n    traces\nend","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"The layout of the plot is defined with simple defaults.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"layout = default_layout_3d(;width=900, height=900)","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Next, the graphics is rendered, and may be interacted with by zooming, panning, etc.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"pl = render(traces; layout = layout)\n\n#","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html#Visualizing-the-nodes","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"Visualizing the nodes","text":"","category":"section"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"In order to be able to discern the nodes we will reduce the opacity of the surfaces representing the beams, otherwise the nodes would be hidden by these surfaces. Otherwise the geometries defined in the same way as above.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"tbox = plot_space_box([[-1.2 * L -1.2 * L -1.2 * L]; [+1.2 * L +1.2 * L +1.2 * L]])\ntraces = let traces = tbox\n    for fes in fesa\n        labl  = fes.label[1]\n        tm = plot_solid(fens, fes; facecolor=colors[labl], opacity = 0.3);\n        traces = cat(traces, tm; dims = 1)\n    end\n    traces\nend","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Next we add to the \"traces\" the graphics representing all the nodes in the model as bright red dots.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"using VisualStructures: plot_nodes\ntraces = cat(traces, plot_nodes(fens; color = \"rgb(255, 15, 5)\"); dims = 1)","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"Finally, the graphics is presented.","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"layout = default_layout_3d(;width=900, height=900)\npl = render(traces; layout = layout)\n\nnothing","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"","category":"page"},{"location":"tutorials/garteur_geometry_vis_tut.html","page":"GARTEUR SM-AG19 Testbed: Construction of the geometry","title":"GARTEUR SM-AG19 Testbed: Construction of the geometry","text":"This page was generated using Literate.jl.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html#Prestressed-simply-supported-column-modal-analysis","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"","category":"section"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Source code: prestressed_column_modal_tut.jl","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html#Description","page":"Prestressed simply-supported column modal analysis","title":"Description","text":"","category":"section"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Vibration analysis of a simply supported column loaded with axial force. The fundamental vibration frequency depends on the prestress force.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html#Goals","page":"Prestressed simply-supported column modal analysis","title":"Goals","text":"","category":"section"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Demonstrate the change in the fundamental vibration frequency due to the prestress through an axial force.\nShow how to evaluate the geometric stiffness from a static solution.\nSolve the eigenvalue free vibration problem with the inclusion of the geometric stiffness matrix.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"#","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html#Definition-of-the-basic-inputs","page":"Prestressed simply-supported column modal analysis","title":"Definition of the basic inputs","text":"","category":"section"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The finite element code realize on the basic functionality implemented in this package.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"using FinEtools","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The material parameters may be defined with the specification of the units. The elastic properties are:","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"E = 30002.0 * phun(\"ksi\")\nnu = 0.0;","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The mass density is expressed in customary units as","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"g = 32.17*12 * phun(\"in/sec^2\")\nrho = 4.65 * phun(\"oz/in ^3\") / g","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Here are the cross-sectional dimensions and the length of the beam between supports.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"b = 1.8 * phun(\"in\"); h = 1.8 * phun(\"in\"); L = 300 * phun(\"in\");\n\n#","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html#Cross-section","page":"Prestressed simply-supported column modal analysis","title":"Cross-section","text":"","category":"section"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Cross-sectional properties are incorporated in the cross-section property. The three arguments supplied are functions. All are returning \"constants\". In particular the first two functions each return the dimension of the cross-section as a constant(the beam has a uniform cross-section); the third function defines the orientation of the cross-section in the global Cartesian coordinates. [1.0, 0.0, 0.0] is the vector that together with the tangent to the midline curve of the beam spans the x_1x_2 plane of the local coordinates for the beam.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"using FinEtoolsFlexStructures.CrossSectionModule: CrossSectionRectangle\ncs = CrossSectionRectangle(s -> b, s -> h, s -> [1.0, 0.0, 0.0])","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Here we retrieve the cross-sectional properties at the arc length 0.0.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"@show A, J, I1, I2, I3 = cs.parameters(0.0)\n\n#","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html#Analytical-frequencies","page":"Prestressed simply-supported column modal analysis","title":"Analytical frequencies","text":"","category":"section"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The analytical frequencies were taken from table 8-1 of Formulas for natural frequency and mode shape, Robert D. Blevins, Krieger publishing company, Malabar Florida, reprint edition 2001.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The beam has cylindrical supports at either end.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Simply supported column without a pre-stressing force has a fundamental frequency of","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"@show analyt_freq = (1*pi)^2/(2*pi*L^2)*sqrt(E*I2/rho/A);","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The critical Euler buckling load (simple-support): (pi^2EI2/L^2).","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"@show PEul = (pi^2*E*I2/L^2);","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Ps=linspace(-1, 1, 100);","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The purpose of the numerical model is to calculate approximation to the fundamental analytical natural frequency.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"neigvs = 1;","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Now we generate the mesh of the beam. The locations of its two endpoints are:","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"xyz = [[0 -L/2 0]; [0 L/2 0]]","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"We will generate","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"n = 20","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"beam elements along the member.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"using FinEtoolsFlexStructures.MeshFrameMemberModule: frame_member\nfens, fes = frame_member(xyz, n, cs);\n\n\n#","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html#Material","page":"Prestressed simply-supported column modal analysis","title":"Material","text":"","category":"section"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Material properties can be now used to create a material: isotropic elasticity model of the FinEtoolsDeforLinear package is instantiated.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"using FinEtoolsDeforLinear\nmaterial = MatDeforElastIso(DeforModelRed3D, rho, E, nu, 0.0)\n\n#","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html#Fields","page":"Prestressed simply-supported column modal analysis","title":"Fields","text":"","category":"section"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Now we start constructing the discrete finite element model. We begin by constructing the requisite fields, geometry and displacement. These are the so-called \"configuration variables\", all initialized to 0. This is that geometry field.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"geom0 = NodalField(fens.xyz)","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"This is the displacement field, three unknown displacements per node.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"u0 = NodalField(zeros(size(fens.xyz, 1), 3))","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"This is the rotation field, three unknown rotations per node are represented with a rotation matrix, in total nine numbers. The utility function initial_Rfield","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"using FinEtoolsFlexStructures.RotUtilModule: initial_Rfield\nRfield0 = initial_Rfield(fens)","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Finally, this is the displacement and rotation field for incremental changes, incremental displacements and incremental rotations. In total, 6 unknowns per node.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"dchi = NodalField(zeros(size(fens.xyz, 1), 6))\n\n#","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html#Support-conditions","page":"Prestressed simply-supported column modal analysis","title":"Support conditions","text":"","category":"section"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Now we apply the essential boundary conditions (EBCs) to enforce the action of the supports at the ends of the beam.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"First we select the node at the location  [0 -L/2 0]. This is the immovable node.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"immovable = selectnode(fens; box=[0 0 -L/2 -L/2 0 0], tolerance=L/n/1000)[1]","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The boundary condition at this point dictates zero displacements (degrees of freedom 1, 2, and 3) and zero rotations about the axis of the beam (degree of freedom 5).","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"for i in [1,2,3,5]\n    setebc!(dchi, [immovable], true, i)\nend","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Similarly, the node next to the other end of the beam is selected. This node is to be exposed to the external loading through the axial force.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"movable = selectnode(fens; box=[0 0 L/2  L/2 0 0], tolerance=L/n/1000)[1]","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"This time the transverse displacements and the axial rotation are suppressed.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"for i in [1,3,5]\n    setebc!(dchi, [movable], true, i)\nend","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"These boundary conditions now need to be \"applied\". This simply means that the prescribed values of the degrees of freedom are copied into the active degrees of freedom.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"applyebc!(dchi)","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The essential boundary conditions will also reduce the number of free (unknown) degrees of freedom.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"numberdofs!(dchi);","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Here we inspect the degrees of freedom in the incremental displacement/rotation field:","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"@show dchi.dofnums","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Note that the degrees of freedom are actually carried by the incremental field, not by the displacement or the rotation fields.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"#","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html#Assemble-the-global-discrete-system","page":"Prestressed simply-supported column modal analysis","title":"Assemble the global discrete system","text":"","category":"section"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"using FinEtoolsFlexStructures.FEMMCorotBeamModule: FEMMCorotBeam\nfemm = FEMMCorotBeam(IntegDomain(fes, GaussRule(1, 2)), material);","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"For disambiguation we will refer to the stiffness and mass functions by qualifying them with the corotational-beam module, FEMMCorotBeamModule.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"using FinEtoolsFlexStructures.FEMMCorotBeamModule\nCB = FEMMCorotBeamModule","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Thus we can construct the stiffness matrix as follows: Note that the finite element machine is the first argument. This provides access to the integration domain. The next argument is the geometry field, followed by the displacement, rotations, and incremental displacement/rotation fields.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"K = CB.stiffness(femm, geom0, u0, Rfield0, dchi);","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Now we construct the means of applying the concentrated force of prestress at the movable node. The node is the \"boundary\" of the domain of the column.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"loadbdry = FESetP1(reshape([movable], 1, 1))","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The concentrated force can be considered a distributed loading at a single point. This distributed loading can be integrated with a quadrature rule suitable for a single point domains.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"lfemm = FEMMBase(IntegDomain(loadbdry, PointRule()))","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"We assume that the magnitude of the force is unity. Note that the force is applied in the positive direction along the beam, meaning as tensile. Therefore, buckling will be caused by applying  a negative buckling factor. Numerically, the buckling factor corresponding to failure is then of the magnitude of the Euler force.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"fi = ForceIntensity(FFlt[0, 1.0, 0, 0, 0, 0]);","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The distributed loading is now integrated over the \"volume\" of the integration domain.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"F = CB.distribloads(lfemm, geom0, dchi, fi, 3);","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Solve for the displacement under @show the static load","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"scattersysvec!(dchi, K\\F);","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Update deflections so that the initial stress can be computed. First the displacements:","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"u1 = deepcopy(u0)\nu1.values .= dchi.values[:, 1:3]","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Then the rotations:","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Rfield1 = deepcopy(Rfield0)\nusing FinEtoolsFlexStructures.RotUtilModule:  update_rotation_field!\nupdate_rotation_field!(Rfield1, dchi)","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The static deflection is now used to compute the internal forces which in turn lead to the geometric stiffness matrix.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Kg = CB.geostiffness(femm, geom0, u1, Rfield1, dchi);","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Now we can evaluate the mass matrix,","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"M = CB.mass(femm, geom0, u0, Rfield0, dchi);","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"and we have the complete discrete model for the solution of the free vibration problem.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"#","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html#Solve-the-free-vibration-problem","page":"Prestressed simply-supported column modal analysis","title":"Solve the free-vibration problem","text":"","category":"section"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The Arnoldi algorithm implemented in the well-known Arpack package is used to solve the generalized eigenvalue problem with the sparse matrices. As is common in structural dynamics, we request the smallest eigenvalues in absolute value (:SM).","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"using Arpack","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The prestress-modified natural frequencies are computed in the loop for a number of prestress force values.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Ps = collect(linearspace(-1.0, 1.0, 50)).*PEul\nfreqs = let freqs =[];\n    for P in Ps","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Note that we take the complete stiffness matrix: elastic plus prestress (initial stress).","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"        evals, evecs, nconv = eigs(K + P.*Kg, M; nev=neigvs, which=:SM, explicittransform = :none);","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"The fundamental frequency:","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"        f = sqrt(evals[1]) / (2 * pi);\n        push!(freqs, f);\n    end\n    freqs\nend","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"Show the normalized force and the fundamental frequencies.","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"sigdig(n) = round(n * 1000) / 1000\n@show sigdig.(Ps./PEul), sigdig.(freqs)\n\n#","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html#Present-a-plot","page":"Prestressed simply-supported column modal analysis","title":"Present a plot","text":"","category":"section"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"using Gnuplot\n\n\n@gp  \"set terminal windows 0 \"  :-\n\n@gp  :- Ps./PEul freqs./analyt_freq \" lw 2 lc rgb 'red' with p title 'Fundamental frequency' \"  :-\n\n@gp  :- \"set xlabel 'P/P_{Euler}'\" :-\n@gp  :- \"set ylabel 'Frequency(P)/Frequency(0) [Hz]'\" :-\n@gp  :- \"set title 'Prestressed column'\"\n\nnothing","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"","category":"page"},{"location":"tutorials/prestressed_column_modal_tut.html","page":"Prestressed simply-supported column modal analysis","title":"Prestressed simply-supported column modal analysis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#FinEtoolsFlexStructuressTutorials-Documentation","page":"Home","title":"FinEtoolsFlexStructuressTutorials Documentation","text":"","category":"section"},{"location":"index.html#Tutorials","page":"Home","title":"Tutorials","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The tutorials are provided in the form of Julia scripts and Markdown files. ","category":"page"}]
}
